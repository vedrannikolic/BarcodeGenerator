/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/qrcode/decoder/DecodedBitStreamParser.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BitSource from"../../common/BitSource";import CharacterSetECI from"../../common/CharacterSetECI";import DecoderResult from"../../common/DecoderResult";import StringUtils from"../../common/StringUtils";import FormatException from"../../FormatException";import StringBuilder from"../../util/StringBuilder";import StringEncoding from"../../util/StringEncoding";import Mode from"./Mode";export default class DecodedBitStreamParser{static decode(e,t,r,a){const o=new BitSource(e);let i=new StringBuilder;const n=new Array;let c=-1,d=-1;try{let e,r=null,s=!1;do{if(o.available()<4)e=Mode.TERMINATOR;else{const t=o.readBits(4);e=Mode.forBits(t)}switch(e){case Mode.TERMINATOR:break;case Mode.FNC1_FIRST_POSITION:case Mode.FNC1_SECOND_POSITION:s=!0;break;case Mode.STRUCTURED_APPEND:if(o.available()<16)throw new FormatException;c=o.readBits(8),d=o.readBits(8);break;case Mode.ECI:const m=DecodedBitStreamParser.parseECIValue(o);if(r=CharacterSetECI.getCharacterSetECIByValue(m),null===r)throw new FormatException;break;case Mode.HANZI:const l=o.readBits(4),h=o.readBits(e.getCharacterCountBits(t));l===DecodedBitStreamParser.GB2312_SUBSET&&DecodedBitStreamParser.decodeHanziSegment(o,i,h);break;default:const p=o.readBits(e.getCharacterCountBits(t));switch(e){case Mode.NUMERIC:DecodedBitStreamParser.decodeNumericSegment(o,i,p);break;case Mode.ALPHANUMERIC:DecodedBitStreamParser.decodeAlphanumericSegment(o,i,p,s);break;case Mode.BYTE:DecodedBitStreamParser.decodeByteSegment(o,i,p,r,n,a);break;case Mode.KANJI:DecodedBitStreamParser.decodeKanjiSegment(o,i,p);break;default:throw new FormatException}}}while(e!==Mode.TERMINATOR)}catch(e){throw new FormatException}return new DecoderResult(e,i.toString(),0===n.length?null:n,null===r?null:r.toString(),c,d)}static decodeHanziSegment(e,t,r){if(13*r>e.available())throw new FormatException;const a=new Uint8Array(2*r);let o=0;for(;r>0;){const t=e.readBits(13);let i=t/96<<8&4294967295|t%96;i+=i<959?41377:42657,a[o]=i>>8&255,a[o+1]=255&i,o+=2,r--}try{t.append(StringEncoding.decode(a,StringUtils.GB2312))}catch(e){throw new FormatException(e)}}static decodeKanjiSegment(e,t,r){if(13*r>e.available())throw new FormatException;const a=new Uint8Array(2*r);let o=0;for(;r>0;){const t=e.readBits(13);let i=t/192<<8&4294967295|t%192;i+=i<7936?33088:49472,a[o]=i>>8,a[o+1]=i,o+=2,r--}try{t.append(StringEncoding.decode(a,StringUtils.SHIFT_JIS))}catch(e){throw new FormatException(e)}}static decodeByteSegment(e,t,r,a,o,i){if(8*r>e.available())throw new FormatException;const n=new Uint8Array(r);for(let t=0;t<r;t++)n[t]=e.readBits(8);let c;c=null===a?StringUtils.guessEncoding(n,i):a.getName();try{t.append(StringEncoding.decode(n,c))}catch(e){throw new FormatException(e)}o.push(n)}static toAlphaNumericChar(e){if(e>=DecodedBitStreamParser.ALPHANUMERIC_CHARS.length)throw new FormatException;return DecodedBitStreamParser.ALPHANUMERIC_CHARS[e]}static decodeAlphanumericSegment(e,t,r,a){const o=t.length();for(;r>1;){if(e.available()<11)throw new FormatException;const a=e.readBits(11);t.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(a/45))),t.append(DecodedBitStreamParser.toAlphaNumericChar(a%45)),r-=2}if(1===r){if(e.available()<6)throw new FormatException;t.append(DecodedBitStreamParser.toAlphaNumericChar(e.readBits(6)))}if(a)for(let e=o;e<t.length();e++)"%"===t.charAt(e)&&(e<t.length()-1&&"%"===t.charAt(e+1)?t.deleteCharAt(e+1):t.setCharAt(e,String.fromCharCode(29)))}static decodeNumericSegment(e,t,r){for(;r>=3;){if(e.available()<10)throw new FormatException;const a=e.readBits(10);if(a>=1e3)throw new FormatException;t.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(a/100))),t.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(a/10)%10)),t.append(DecodedBitStreamParser.toAlphaNumericChar(a%10)),r-=3}if(2===r){if(e.available()<7)throw new FormatException;const r=e.readBits(7);if(r>=100)throw new FormatException;t.append(DecodedBitStreamParser.toAlphaNumericChar(Math.floor(r/10))),t.append(DecodedBitStreamParser.toAlphaNumericChar(r%10))}else if(1===r){if(e.available()<4)throw new FormatException;const r=e.readBits(4);if(r>=10)throw new FormatException;t.append(DecodedBitStreamParser.toAlphaNumericChar(r))}}static parseECIValue(e){const t=e.readBits(8);if(0==(128&t))return 127&t;if(128==(192&t)){return(63&t)<<8&4294967295|e.readBits(8)}if(192==(224&t)){return(31&t)<<16&4294967295|e.readBits(16)}throw new FormatException}}DecodedBitStreamParser.ALPHANUMERIC_CHARS="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:",DecodedBitStreamParser.GB2312_SUBSET=1;
//# sourceMappingURL=/sm/db0ededbc41027f9a5f8f135379fb41f5872e0c8a06bfb70d64221efab8b9aa8.map