/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/qrcode/decoder/Decoder.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ChecksumException from"../../ChecksumException";import BitMatrix from"../../common/BitMatrix";import GenericGF from"../../common/reedsolomon/GenericGF";import ReedSolomonDecoder from"../../common/reedsolomon/ReedSolomonDecoder";import BitMatrixParser from"./BitMatrixParser";import DataBlock from"./DataBlock";import DecodedBitStreamParser from"./DecodedBitStreamParser";import QRCodeDecoderMetaData from"./QRCodeDecoderMetaData";export default class Decoder{constructor(){this.rsDecoder=new ReedSolomonDecoder(GenericGF.QR_CODE_FIELD_256)}decodeBooleanArray(r,e){return this.decodeBitMatrix(BitMatrix.parseFromBooleanArray(r),e)}decodeBitMatrix(r,e){const o=new BitMatrixParser(r);let t=null;try{return this.decodeBitMatrixParser(o,e)}catch(r){t=r}try{o.remask(),o.setMirror(!0),o.readVersion(),o.readFormatInformation(),o.mirror();const r=this.decodeBitMatrixParser(o,e);return r.setOther(new QRCodeDecoderMetaData(!0)),r}catch(r){if(null!==t)throw t;throw r}}decodeBitMatrixParser(r,e){const o=r.readVersion(),t=r.readFormatInformation().getErrorCorrectionLevel(),a=r.readCodewords(),c=DataBlock.getDataBlocks(a,o,t);let i=0;for(const r of c)i+=r.getNumDataCodewords();const d=new Uint8Array(i);let n=0;for(const r of c){const e=r.getCodewords(),o=r.getNumDataCodewords();this.correctErrors(e,o);for(let r=0;r<o;r++)d[n++]=e[r]}return DecodedBitStreamParser.decode(d,o,t,e)}correctErrors(r,e){const o=new Int32Array(r);try{this.rsDecoder.decode(o,r.length-e)}catch(r){throw new ChecksumException}for(let t=0;t<e;t++)r[t]=o[t]}}
//# sourceMappingURL=/sm/f95fa592c0f1da9bb7241ffd40704030f01e8c31f294de9885fba380dcda8bdf.map