/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/qrcode/decoder/BitMatrixParser.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Version from"./Version";import FormatInformation from"./FormatInformation";import DataMask from"./DataMask";import FormatException from"../../FormatException";export default class BitMatrixParser{constructor(t){const r=t.getHeight();if(r<21||1!=(3&r))throw new FormatException;this.bitMatrix=t}readFormatInformation(){if(null!==this.parsedFormatInfo&&void 0!==this.parsedFormatInfo)return this.parsedFormatInfo;let t=0;for(let r=0;r<6;r++)t=this.copyBit(r,8,t);t=this.copyBit(7,8,t),t=this.copyBit(8,8,t),t=this.copyBit(8,7,t);for(let r=5;r>=0;r--)t=this.copyBit(8,r,t);const r=this.bitMatrix.getHeight();let i=0;const o=r-7;for(let t=r-1;t>=o;t--)i=this.copyBit(8,t,i);for(let t=r-8;t<r;t++)i=this.copyBit(t,8,i);if(this.parsedFormatInfo=FormatInformation.decodeFormatInformation(t,i),null!==this.parsedFormatInfo)return this.parsedFormatInfo;throw new FormatException}readVersion(){if(null!==this.parsedVersion&&void 0!==this.parsedVersion)return this.parsedVersion;const t=this.bitMatrix.getHeight(),r=Math.floor((t-17)/4);if(r<=6)return Version.getVersionForNumber(r);let i=0;const o=t-11;for(let r=5;r>=0;r--)for(let e=t-9;e>=o;e--)i=this.copyBit(e,r,i);let e=Version.decodeVersionInformation(i);if(null!==e&&e.getDimensionForVersion()===t)return this.parsedVersion=e,e;i=0;for(let r=5;r>=0;r--)for(let e=t-9;e>=o;e--)i=this.copyBit(r,e,i);if(e=Version.decodeVersionInformation(i),null!==e&&e.getDimensionForVersion()===t)return this.parsedVersion=e,e;throw new FormatException}copyBit(t,r,i){return(this.isMirror?this.bitMatrix.get(r,t):this.bitMatrix.get(t,r))?i<<1|1:i<<1}readCodewords(){const t=this.readFormatInformation(),r=this.readVersion(),i=DataMask.values.get(t.getDataMask()),o=this.bitMatrix.getHeight();i.unmaskBitMatrix(this.bitMatrix,o);const e=r.buildFunctionPattern();let s=!0;const a=new Uint8Array(r.getTotalCodewords());let n=0,h=0,f=0;for(let t=o-1;t>0;t-=2){6===t&&t--;for(let r=0;r<o;r++){const i=s?o-1-r:r;for(let r=0;r<2;r++)e.get(t-r,i)||(f++,h<<=1,this.bitMatrix.get(t-r,i)&&(h|=1),8===f&&(a[n++]=h,f=0,h=0))}s=!s}if(n!==r.getTotalCodewords())throw new FormatException;return a}remask(){if(null===this.parsedFormatInfo)return;const t=DataMask.values[this.parsedFormatInfo.getDataMask()],r=this.bitMatrix.getHeight();t.unmaskBitMatrix(this.bitMatrix,r)}setMirror(t){this.parsedVersion=null,this.parsedFormatInfo=null,this.isMirror=t}mirror(){const t=this.bitMatrix;for(let r=0,i=t.getWidth();r<i;r++)for(let i=r+1,o=t.getHeight();i<o;i++)t.get(r,i)!==t.get(i,r)&&(t.flip(i,r),t.flip(r,i))}}
//# sourceMappingURL=/sm/6479efd95988b43c50d38b6fdeeed1949427c79b12e81413d1a787bd6e977cdb.map