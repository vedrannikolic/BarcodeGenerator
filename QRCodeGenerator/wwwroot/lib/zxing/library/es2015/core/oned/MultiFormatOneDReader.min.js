/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/MultiFormatOneDReader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import DecodeHintType from"../DecodeHintType";import NotFoundException from"../NotFoundException";import Code128Reader from"./Code128Reader";import Code39Reader from"./Code39Reader";import Code93Reader from"./Code93Reader";import ITFReader from"./ITFReader";import MultiFormatUPCEANReader from"./MultiFormatUPCEANReader";import OneDReader from"./OneDReader";import CodaBarReader from"./CodaBarReader";import RSSExpandedReader from"./rss/expanded/RSSExpandedReader";import RSS14Reader from"./rss/RSS14Reader";export default class MultiFormatOneDReader extends OneDReader{constructor(e){super(),this.readers=[];const r=e?e.get(DecodeHintType.POSSIBLE_FORMATS):null,d=e&&void 0!==e.get(DecodeHintType.ASSUME_CODE_39_CHECK_DIGIT),a=e&&void 0!==e.get(DecodeHintType.ENABLE_CODE_39_EXTENDED_MODE);r&&((r.includes(BarcodeFormat.EAN_13)||r.includes(BarcodeFormat.UPC_A)||r.includes(BarcodeFormat.EAN_8)||r.includes(BarcodeFormat.UPC_E))&&this.readers.push(new MultiFormatUPCEANReader(e)),r.includes(BarcodeFormat.CODE_39)&&this.readers.push(new Code39Reader(d,a)),r.includes(BarcodeFormat.CODE_93)&&this.readers.push(new Code93Reader),r.includes(BarcodeFormat.CODE_128)&&this.readers.push(new Code128Reader),r.includes(BarcodeFormat.ITF)&&this.readers.push(new ITFReader),r.includes(BarcodeFormat.CODABAR)&&this.readers.push(new CodaBarReader),r.includes(BarcodeFormat.RSS_14)&&this.readers.push(new RSS14Reader),r.includes(BarcodeFormat.RSS_EXPANDED)&&(console.warn("RSS Expanded reader IS NOT ready for production yet! use at your own risk."),this.readers.push(new RSSExpandedReader))),0===this.readers.length&&(this.readers.push(new MultiFormatUPCEANReader(e)),this.readers.push(new Code39Reader),this.readers.push(new Code93Reader),this.readers.push(new MultiFormatUPCEANReader(e)),this.readers.push(new Code128Reader),this.readers.push(new ITFReader),this.readers.push(new RSS14Reader))}decodeRow(e,r,d){for(let a=0;a<this.readers.length;a++)try{return this.readers[a].decodeRow(e,r,d)}catch(e){}throw new NotFoundException}reset(){this.readers.forEach((e=>e.reset()))}}
//# sourceMappingURL=/sm/73ca843a176818635beeaa7aac8967620afa1738101e8a3df822a6763e0ca35b.map