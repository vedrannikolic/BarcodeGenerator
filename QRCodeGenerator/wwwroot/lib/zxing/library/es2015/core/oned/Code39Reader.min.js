/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/Code39Reader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import ChecksumException from"../ChecksumException";import FormatException from"../FormatException";import NotFoundException from"../NotFoundException";import OneDReader from"./OneDReader";import Result from"../Result";import ResultPoint from"../ResultPoint";export default class Code39Reader extends OneDReader{constructor(e=!1,t=!1){super(),this.usingCheckDigit=e,this.extendedMode=t,this.decodeRowResult="",this.counters=new Int32Array(9)}decodeRow(e,t,o){let r=this.counters;r.fill(0),this.decodeRowResult="";let d,i,n=Code39Reader.findAsteriskPattern(t,r),a=t.getNextSet(n[1]),s=t.getSize();do{Code39Reader.recordPattern(t,a,r);let e=Code39Reader.toNarrowWidePattern(r);if(e<0)throw new NotFoundException;d=Code39Reader.patternToChar(e),this.decodeRowResult+=d,i=a;for(let e of r)a+=e;a=t.getNextSet(a)}while("*"!==d);this.decodeRowResult=this.decodeRowResult.substring(0,this.decodeRowResult.length-1);let l,h=0;for(let e of r)h+=e;if(a!==s&&2*(a-i-h)<h)throw new NotFoundException;if(this.usingCheckDigit){let e=this.decodeRowResult.length-1,t=0;for(let o=0;o<e;o++)t+=Code39Reader.ALPHABET_STRING.indexOf(this.decodeRowResult.charAt(o));if(this.decodeRowResult.charAt(e)!==Code39Reader.ALPHABET_STRING.charAt(t%43))throw new ChecksumException;this.decodeRowResult=this.decodeRowResult.substring(0,e)}if(0===this.decodeRowResult.length)throw new NotFoundException;l=this.extendedMode?Code39Reader.decodeExtended(this.decodeRowResult):this.decodeRowResult;let c=(n[1]+n[0])/2,R=i+h/2;return new Result(l,null,0,[new ResultPoint(c,e),new ResultPoint(R,e)],BarcodeFormat.CODE_39,(new Date).getTime())}static findAsteriskPattern(e,t){let o=e.getSize(),r=e.getNextSet(0),d=0,i=r,n=!1,a=t.length;for(let s=r;s<o;s++)if(e.get(s)!==n)t[d]++;else{if(d===a-1){if(this.toNarrowWidePattern(t)===Code39Reader.ASTERISK_ENCODING&&e.isRange(Math.max(0,i-Math.floor((s-i)/2)),i,!1))return[i,s];i+=t[0]+t[1],t.copyWithin(0,2,2+d-1),t[d-1]=0,t[d]=0,d--}else d++;t[d]=1,n=!n}throw new NotFoundException}static toNarrowWidePattern(e){let t,o=e.length,r=0;do{let d=2147483647;for(let t of e)t<d&&t>r&&(d=t);r=d,t=0;let i=0,n=0;for(let d=0;d<o;d++){let a=e[d];a>r&&(n|=1<<o-1-d,t++,i+=a)}if(3===t){for(let d=0;d<o&&t>0;d++){let o=e[d];if(o>r&&(t--,2*o>=i))return-1}return n}}while(t>3);return-1}static patternToChar(e){for(let t=0;t<Code39Reader.CHARACTER_ENCODINGS.length;t++)if(Code39Reader.CHARACTER_ENCODINGS[t]===e)return Code39Reader.ALPHABET_STRING.charAt(t);if(e===Code39Reader.ASTERISK_ENCODING)return"*";throw new NotFoundException}static decodeExtended(e){let t=e.length,o="";for(let r=0;r<t;r++){let t=e.charAt(r);if("+"===t||"$"===t||"%"===t||"/"===t){let d=e.charAt(r+1),i="\0";switch(t){case"+":if(!(d>="A"&&d<="Z"))throw new FormatException;i=String.fromCharCode(d.charCodeAt(0)+32);break;case"$":if(!(d>="A"&&d<="Z"))throw new FormatException;i=String.fromCharCode(d.charCodeAt(0)-64);break;case"%":if(d>="A"&&d<="E")i=String.fromCharCode(d.charCodeAt(0)-38);else if(d>="F"&&d<="J")i=String.fromCharCode(d.charCodeAt(0)-11);else if(d>="K"&&d<="O")i=String.fromCharCode(d.charCodeAt(0)+16);else if(d>="P"&&d<="T")i=String.fromCharCode(d.charCodeAt(0)+43);else if("U"===d)i="\0";else if("V"===d)i="@";else if("W"===d)i="`";else{if("X"!==d&&"Y"!==d&&"Z"!==d)throw new FormatException;i=""}break;case"/":if(d>="A"&&d<="O")i=String.fromCharCode(d.charCodeAt(0)-32);else{if("Z"!==d)throw new FormatException;i=":"}}o+=i,r++}else o+=t}return o}}Code39Reader.ALPHABET_STRING="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%",Code39Reader.CHARACTER_ENCODINGS=[52,289,97,352,49,304,112,37,292,100,265,73,328,25,280,88,13,268,76,28,259,67,322,19,274,82,7,262,70,22,385,193,448,145,400,208,133,388,196,168,162,138,42],Code39Reader.ASTERISK_ENCODING=148;
//# sourceMappingURL=/sm/1ab73298f22090ba9778461976aa59436ae81d43f5667ccf560fa56d760f9515.map