/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/Code93Reader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import ChecksumException from"../ChecksumException";import FormatException from"../FormatException";import NotFoundException from"../NotFoundException";import OneDReader from"./OneDReader";import Result from"../Result";import ResultPoint from"../ResultPoint";export default class Code93Reader extends OneDReader{constructor(){super(),this.decodeRowResult="",this.counters=new Int32Array(6)}decodeRow(e,t,o){let r,i,n=this.findAsteriskPattern(t),d=t.getNextSet(n[1]),s=t.getSize(),c=this.counters;c.fill(0),this.decodeRowResult="";do{Code93Reader.recordPattern(t,d,c);let e=this.toPattern(c);if(e<0)throw new NotFoundException;r=this.patternToChar(e),this.decodeRowResult+=r,i=d;for(let e of c)d+=e;d=t.getNextSet(d)}while("*"!==r);this.decodeRowResult=this.decodeRowResult.substring(0,this.decodeRowResult.length-1);let h=0;for(let e of c)h+=e;if(d===s||!t.get(d))throw new NotFoundException;if(this.decodeRowResult.length<2)throw new NotFoundException;this.checkChecksums(this.decodeRowResult),this.decodeRowResult=this.decodeRowResult.substring(0,this.decodeRowResult.length-2);let a=this.decodeExtended(this.decodeRowResult),l=(n[1]+n[0])/2,R=i+h/2;return new Result(a,null,0,[new ResultPoint(l,e),new ResultPoint(R,e)],BarcodeFormat.CODE_93,(new Date).getTime())}findAsteriskPattern(e){let t=e.getSize(),o=e.getNextSet(0);this.counters.fill(0);let r=this.counters,i=o,n=!1,d=r.length,s=0;for(let c=o;c<t;c++)if(e.get(c)!==n)r[s]++;else{if(s===d-1){if(this.toPattern(r)===Code93Reader.ASTERISK_ENCODING)return new Int32Array([i,c]);i+=r[0]+r[1],r.copyWithin(0,2,2+s-1),r[s-1]=0,r[s]=0,s--}else s++;r[s]=1,n=!n}throw new NotFoundException}toPattern(e){let t=0;for(const o of e)t+=o;let o=0,r=e.length;for(let i=0;i<r;i++){let r=Math.round(9*e[i]/t);if(r<1||r>4)return-1;if(0==(1&i))for(let e=0;e<r;e++)o=o<<1|1;else o<<=r}return o}patternToChar(e){for(let t=0;t<Code93Reader.CHARACTER_ENCODINGS.length;t++)if(Code93Reader.CHARACTER_ENCODINGS[t]===e)return Code93Reader.ALPHABET_STRING.charAt(t);throw new NotFoundException}decodeExtended(e){let t=e.length,o="";for(let r=0;r<t;r++){let i=e.charAt(r);if(i>="a"&&i<="d"){if(r>=t-1)throw new FormatException;let n=e.charAt(r+1),d="\0";switch(i){case"d":if(!(n>="A"&&n<="Z"))throw new FormatException;d=String.fromCharCode(n.charCodeAt(0)+32);break;case"a":if(!(n>="A"&&n<="Z"))throw new FormatException;d=String.fromCharCode(n.charCodeAt(0)-64);break;case"b":if(n>="A"&&n<="E")d=String.fromCharCode(n.charCodeAt(0)-38);else if(n>="F"&&n<="J")d=String.fromCharCode(n.charCodeAt(0)-11);else if(n>="K"&&n<="O")d=String.fromCharCode(n.charCodeAt(0)+16);else if(n>="P"&&n<="T")d=String.fromCharCode(n.charCodeAt(0)+43);else if("U"===n)d="\0";else if("V"===n)d="@";else if("W"===n)d="`";else{if(!(n>="X"&&n<="Z"))throw new FormatException;d=String.fromCharCode(127)}break;case"c":if(n>="A"&&n<="O")d=String.fromCharCode(n.charCodeAt(0)-32);else{if("Z"!==n)throw new FormatException;d=":"}}o+=d,r++}else o+=i}return o}checkChecksums(e){let t=e.length;this.checkOneChecksum(e,t-2,20),this.checkOneChecksum(e,t-1,15)}checkOneChecksum(e,t,o){let r=1,i=0;for(let n=t-1;n>=0;n--)i+=r*Code93Reader.ALPHABET_STRING.indexOf(e.charAt(n)),++r>o&&(r=1);if(e.charAt(t)!==Code93Reader.ALPHABET_STRING[i%47])throw new ChecksumException}}Code93Reader.ALPHABET_STRING="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*",Code93Reader.CHARACTER_ENCODINGS=[276,328,324,322,296,292,290,336,274,266,424,420,418,404,402,394,360,356,354,308,282,344,332,326,300,278,436,434,428,422,406,410,364,358,310,314,302,468,466,458,366,374,430,294,474,470,306,350],Code93Reader.ASTERISK_ENCODING=Code93Reader.CHARACTER_ENCODINGS[47];
//# sourceMappingURL=/sm/2fe072f6328c483f4344a6b7ebd3f6960842c8366bc3b11fd497a71eb47a3960.map