/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/CodaBarReader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import NotFoundException from"../NotFoundException";import OneDReader from"./OneDReader";import Result from"../Result";import ResultPoint from"../ResultPoint";export default class CodaBarReader extends OneDReader{constructor(){super(...arguments),this.CODA_BAR_CHAR_SET={nnnnnww:"0",nnnnwwn:"1",nnnwnnw:"2",wwnnnnn:"3",nnwnnwn:"4",wnnnnwn:"5",nwnnnnw:"6",nwnnwnn:"7",nwwnnnn:"8",wnnwnnn:"9",nnnwwnn:"-",nnwwnnn:"$",wnnnwnw:":",wnwnnnw:"/",wnwnwnn:".",nnwwwww:"+",nnwwnwn:"A",nwnwnnw:"B",nnnwnww:"C",nnnwwwn:"D"}}decodeRow(n,t,e){let w=this.getValidRowData(t);if(!w)throw new NotFoundException;let o=this.codaBarDecodeRow(w.row);if(!o)throw new NotFoundException;return new Result(o,null,0,[new ResultPoint(w.left,n),new ResultPoint(w.right,n)],BarcodeFormat.CODABAR,(new Date).getTime())}getValidRowData(n){let t=n.toArray(),e=t.indexOf(!0);if(-1===e)return null;let w=t.lastIndexOf(!0);if(w<=e)return null;t=t.slice(e,w+1);let o=[],r=t[0],l=1;for(let n=1;n<t.length;n++)t[n]===r?l++:(r=t[n],o.push(l),l=1);return o.push(l),o.length<23&&(o.length+1)%8!=0?null:{row:o,left:e,right:w}}codaBarDecodeRow(n){const t=[],e=Math.ceil(n.reduce(((n,t)=>(n+t)/2),0));for(;n.length>0;){const w=n.splice(0,8).splice(0,7).map((n=>n<e?"n":"w")).join("");if(void 0===this.CODA_BAR_CHAR_SET[w])return null;t.push(this.CODA_BAR_CHAR_SET[w])}let w=t.join("");return this.validCodaBarString(w)?w:null}validCodaBarString(n){return/^[A-D].{1,}[A-D]$/.test(n)}}
//# sourceMappingURL=/sm/5a3f60dc01148445c86eefa04fc948aad4922916f6bb658e230bd8e85f89991c.map