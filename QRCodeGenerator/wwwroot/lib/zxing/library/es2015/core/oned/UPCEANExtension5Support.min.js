/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/UPCEANExtension5Support.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import AbstractUPCEANReader from"./AbstractUPCEANReader";import Result from"../Result";import ResultPoint from"../ResultPoint";import ResultMetadataType from"../ResultMetadataType";import NotFoundException from"../NotFoundException";export default class UPCEANExtension5Support{constructor(){this.CHECK_DIGIT_ENCODINGS=[24,20,18,17,12,6,3,10,9,5],this.decodeMiddleCounters=Int32Array.from([0,0,0,0]),this.decodeRowStringBuffer=""}decodeRow(t,e,r){let o=this.decodeRowStringBuffer,n=this.decodeMiddle(e,r,o),i=o.toString(),s=UPCEANExtension5Support.parseExtensionString(i),a=[new ResultPoint((r[0]+r[1])/2,t),new ResultPoint(n,t)],d=new Result(i,null,0,a,BarcodeFormat.UPC_EAN_EXTENSION,(new Date).getTime());return null!=s&&d.putAllMetadata(s),d}decodeMiddle(t,e,r){let o=this.decodeMiddleCounters;o[0]=0,o[1]=0,o[2]=0,o[3]=0;let n=t.getSize(),i=e[1],s=0;for(let e=0;e<5&&i<n;e++){let n=AbstractUPCEANReader.decodeDigit(t,o,i,AbstractUPCEANReader.L_AND_G_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+n%10);for(let t of o)i+=t;n>=10&&(s|=1<<4-e),4!==e&&(i=t.getNextSet(i),i=t.getNextUnset(i))}if(5!==r.length)throw new NotFoundException;let a=this.determineCheckDigit(s);if(UPCEANExtension5Support.extensionChecksum(r.toString())!==a)throw new NotFoundException;return i}static extensionChecksum(t){let e=t.length,r=0;for(let o=e-2;o>=0;o-=2)r+=t.charAt(o).charCodeAt(0)-"0".charCodeAt(0);r*=3;for(let o=e-1;o>=0;o-=2)r+=t.charAt(o).charCodeAt(0)-"0".charCodeAt(0);return r*=3,r%10}determineCheckDigit(t){for(let e=0;e<10;e++)if(t===this.CHECK_DIGIT_ENCODINGS[e])return e;throw new NotFoundException}static parseExtensionString(t){if(5!==t.length)return null;let e=UPCEANExtension5Support.parseExtension5String(t);return null==e?null:new Map([[ResultMetadataType.SUGGESTED_PRICE,e]])}static parseExtension5String(t){let e;switch(t.charAt(0)){case"0":e="Â£";break;case"5":e="$";break;case"9":switch(t){case"90000":return null;case"99991":return"0.00";case"99990":return"Used"}e="";break;default:e=""}let r=parseInt(t.substring(1)),o=r%100;return e+(r/100).toString()+"."+(o<10?"0"+o:o.toString())}}
//# sourceMappingURL=/sm/372f8df2e1e7cc310df068b5e2b6e22b1ac980d1e9a3c3d5853347c080a9f4f4.map