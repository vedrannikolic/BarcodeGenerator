/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/rss/expanded/decoders/AI01392xDecoder.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import AI01decoder from"./AI01decoder";import NotFoundException from"../../../../NotFoundException";import StringBuilder from"../../../../util/StringBuilder";export default class AI01392xDecoder extends AI01decoder{constructor(e){super(e)}parseInformation(){if(this.getInformation().getSize()<AI01392xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE)throw new NotFoundException;let e=new StringBuilder;this.encodeCompressedGtin(e,AI01392xDecoder.HEADER_SIZE);let r=this.getGeneralDecoder().extractNumericValueFromBitArray(AI01392xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE,AI01392xDecoder.LAST_DIGIT_SIZE);e.append("(392"),e.append(r),e.append(")");let o=this.getGeneralDecoder().decodeGeneralPurposeField(AI01392xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE+AI01392xDecoder.LAST_DIGIT_SIZE,null);return e.append(o.getNewString()),e.toString()}}AI01392xDecoder.HEADER_SIZE=8,AI01392xDecoder.LAST_DIGIT_SIZE=2;
//# sourceMappingURL=/sm/559010b2a835fcd91704ceba00fd1b3a5df849e2aded319e226815da1ad41a6c.map