/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/Code128Reader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import ChecksumException from"../ChecksumException";import DecodeHintType from"../DecodeHintType";import FormatException from"../FormatException";import NotFoundException from"../NotFoundException";import Result from"../Result";import ResultPoint from"../ResultPoint";import OneDReader from"./OneDReader";export default class Code128Reader extends OneDReader{static findStartPattern(r){const e=r.getSize(),o=r.getNextSet(0);let a=0,t=Int32Array.from([0,0,0,0,0,0]),C=o,n=!1;for(let d=o;d<e;d++)if(r.get(d)!==n)t[a]++;else{if(5===a){let e=Code128Reader.MAX_AVG_VARIANCE,o=-1;for(let r=Code128Reader.CODE_START_A;r<=Code128Reader.CODE_START_C;r++){const a=OneDReader.patternMatchVariance(t,Code128Reader.CODE_PATTERNS[r],Code128Reader.MAX_INDIVIDUAL_VARIANCE);a<e&&(e=a,o=r)}if(o>=0&&r.isRange(Math.max(0,C-(d-C)/2),C,!1))return Int32Array.from([C,d,o]);C+=t[0]+t[1],t=t.slice(2,t.length),t[a-1]=0,t[a]=0,a--}else a++;t[a]=1,n=!n}throw new NotFoundException}static decodeCode(r,e,o){OneDReader.recordPattern(r,o,e);let a=Code128Reader.MAX_AVG_VARIANCE,t=-1;for(let r=0;r<Code128Reader.CODE_PATTERNS.length;r++){const o=Code128Reader.CODE_PATTERNS[r],C=this.patternMatchVariance(e,o,Code128Reader.MAX_INDIVIDUAL_VARIANCE);C<a&&(a=C,t=r)}if(t>=0)return t;throw new NotFoundException}decodeRow(r,e,o){const a=o&&!0===o.get(DecodeHintType.ASSUME_GS1),t=Code128Reader.findStartPattern(e),C=t[2];let n=0;const d=new Uint8Array(20);let A;switch(d[n++]=C,C){case Code128Reader.CODE_START_A:A=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_START_B:A=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_START_C:A=Code128Reader.CODE_CODE_C;break;default:throw new FormatException}let m=!1,f=!1,_="",I=t[0],E=t[1];const y=Int32Array.from([0,0,0,0,0,0]);let R=0,D=0,O=C,c=0,s=!0,i=!1,T=!1;for(;!m;){const r=f;switch(f=!1,R=D,D=Code128Reader.decodeCode(e,y,E),d[n++]=D,D!==Code128Reader.CODE_STOP&&(s=!0),D!==Code128Reader.CODE_STOP&&(c++,O+=c*D),I=E,E+=y.reduce(((r,e)=>r+e),0),D){case Code128Reader.CODE_START_A:case Code128Reader.CODE_START_B:case Code128Reader.CODE_START_C:throw new FormatException}switch(A){case Code128Reader.CODE_CODE_A:if(D<64)_+=T===i?String.fromCharCode(" ".charCodeAt(0)+D):String.fromCharCode(" ".charCodeAt(0)+D+128),T=!1;else if(D<96)_+=T===i?String.fromCharCode(D-64):String.fromCharCode(D+64),T=!1;else switch(D!==Code128Reader.CODE_STOP&&(s=!1),D){case Code128Reader.CODE_FNC_1:a&&(0===_.length?_+="]C1":_+=String.fromCharCode(29));break;case Code128Reader.CODE_FNC_2:case Code128Reader.CODE_FNC_3:break;case Code128Reader.CODE_FNC_4_A:!i&&T?(i=!0,T=!1):i&&T?(i=!1,T=!1):T=!0;break;case Code128Reader.CODE_SHIFT:f=!0,A=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_CODE_B:A=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_CODE_C:A=Code128Reader.CODE_CODE_C;break;case Code128Reader.CODE_STOP:m=!0}break;case Code128Reader.CODE_CODE_B:if(D<96)_+=T===i?String.fromCharCode(" ".charCodeAt(0)+D):String.fromCharCode(" ".charCodeAt(0)+D+128),T=!1;else switch(D!==Code128Reader.CODE_STOP&&(s=!1),D){case Code128Reader.CODE_FNC_1:a&&(0===_.length?_+="]C1":_+=String.fromCharCode(29));break;case Code128Reader.CODE_FNC_2:case Code128Reader.CODE_FNC_3:break;case Code128Reader.CODE_FNC_4_B:!i&&T?(i=!0,T=!1):i&&T?(i=!1,T=!1):T=!0;break;case Code128Reader.CODE_SHIFT:f=!0,A=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_A:A=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_C:A=Code128Reader.CODE_CODE_C;break;case Code128Reader.CODE_STOP:m=!0}break;case Code128Reader.CODE_CODE_C:if(D<100)D<10&&(_+="0"),_+=D;else switch(D!==Code128Reader.CODE_STOP&&(s=!1),D){case Code128Reader.CODE_FNC_1:a&&(0===_.length?_+="]C1":_+=String.fromCharCode(29));break;case Code128Reader.CODE_CODE_A:A=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_B:A=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_STOP:m=!0}}r&&(A=A===Code128Reader.CODE_CODE_A?Code128Reader.CODE_CODE_B:Code128Reader.CODE_CODE_A)}const S=E-I;if(E=e.getNextUnset(E),!e.isRange(E,Math.min(e.getSize(),E+(E-I)/2),!1))throw new NotFoundException;if(O-=c*R,O%103!==R)throw new ChecksumException;const h=_.length;if(0===h)throw new NotFoundException;h>0&&s&&(_=A===Code128Reader.CODE_CODE_C?_.substring(0,h-2):_.substring(0,h-1));const l=(t[1]+t[0])/2,N=I+S/2,F=d.length,g=new Uint8Array(F);for(let r=0;r<F;r++)g[r]=d[r];const p=[new ResultPoint(l,r),new ResultPoint(N,r)];return new Result(_,g,0,p,BarcodeFormat.CODE_128,(new Date).getTime())}}Code128Reader.CODE_PATTERNS=[Int32Array.from([2,1,2,2,2,2]),Int32Array.from([2,2,2,1,2,2]),Int32Array.from([2,2,2,2,2,1]),Int32Array.from([1,2,1,2,2,3]),Int32Array.from([1,2,1,3,2,2]),Int32Array.from([1,3,1,2,2,2]),Int32Array.from([1,2,2,2,1,3]),Int32Array.from([1,2,2,3,1,2]),Int32Array.from([1,3,2,2,1,2]),Int32Array.from([2,2,1,2,1,3]),Int32Array.from([2,2,1,3,1,2]),Int32Array.from([2,3,1,2,1,2]),Int32Array.from([1,1,2,2,3,2]),Int32Array.from([1,2,2,1,3,2]),Int32Array.from([1,2,2,2,3,1]),Int32Array.from([1,1,3,2,2,2]),Int32Array.from([1,2,3,1,2,2]),Int32Array.from([1,2,3,2,2,1]),Int32Array.from([2,2,3,2,1,1]),Int32Array.from([2,2,1,1,3,2]),Int32Array.from([2,2,1,2,3,1]),Int32Array.from([2,1,3,2,1,2]),Int32Array.from([2,2,3,1,1,2]),Int32Array.from([3,1,2,1,3,1]),Int32Array.from([3,1,1,2,2,2]),Int32Array.from([3,2,1,1,2,2]),Int32Array.from([3,2,1,2,2,1]),Int32Array.from([3,1,2,2,1,2]),Int32Array.from([3,2,2,1,1,2]),Int32Array.from([3,2,2,2,1,1]),Int32Array.from([2,1,2,1,2,3]),Int32Array.from([2,1,2,3,2,1]),Int32Array.from([2,3,2,1,2,1]),Int32Array.from([1,1,1,3,2,3]),Int32Array.from([1,3,1,1,2,3]),Int32Array.from([1,3,1,3,2,1]),Int32Array.from([1,1,2,3,1,3]),Int32Array.from([1,3,2,1,1,3]),Int32Array.from([1,3,2,3,1,1]),Int32Array.from([2,1,1,3,1,3]),Int32Array.from([2,3,1,1,1,3]),Int32Array.from([2,3,1,3,1,1]),Int32Array.from([1,1,2,1,3,3]),Int32Array.from([1,1,2,3,3,1]),Int32Array.from([1,3,2,1,3,1]),Int32Array.from([1,1,3,1,2,3]),Int32Array.from([1,1,3,3,2,1]),Int32Array.from([1,3,3,1,2,1]),Int32Array.from([3,1,3,1,2,1]),Int32Array.from([2,1,1,3,3,1]),Int32Array.from([2,3,1,1,3,1]),Int32Array.from([2,1,3,1,1,3]),Int32Array.from([2,1,3,3,1,1]),Int32Array.from([2,1,3,1,3,1]),Int32Array.from([3,1,1,1,2,3]),Int32Array.from([3,1,1,3,2,1]),Int32Array.from([3,3,1,1,2,1]),Int32Array.from([3,1,2,1,1,3]),Int32Array.from([3,1,2,3,1,1]),Int32Array.from([3,3,2,1,1,1]),Int32Array.from([3,1,4,1,1,1]),Int32Array.from([2,2,1,4,1,1]),Int32Array.from([4,3,1,1,1,1]),Int32Array.from([1,1,1,2,2,4]),Int32Array.from([1,1,1,4,2,2]),Int32Array.from([1,2,1,1,2,4]),Int32Array.from([1,2,1,4,2,1]),Int32Array.from([1,4,1,1,2,2]),Int32Array.from([1,4,1,2,2,1]),Int32Array.from([1,1,2,2,1,4]),Int32Array.from([1,1,2,4,1,2]),Int32Array.from([1,2,2,1,1,4]),Int32Array.from([1,2,2,4,1,1]),Int32Array.from([1,4,2,1,1,2]),Int32Array.from([1,4,2,2,1,1]),Int32Array.from([2,4,1,2,1,1]),Int32Array.from([2,2,1,1,1,4]),Int32Array.from([4,1,3,1,1,1]),Int32Array.from([2,4,1,1,1,2]),Int32Array.from([1,3,4,1,1,1]),Int32Array.from([1,1,1,2,4,2]),Int32Array.from([1,2,1,1,4,2]),Int32Array.from([1,2,1,2,4,1]),Int32Array.from([1,1,4,2,1,2]),Int32Array.from([1,2,4,1,1,2]),Int32Array.from([1,2,4,2,1,1]),Int32Array.from([4,1,1,2,1,2]),Int32Array.from([4,2,1,1,1,2]),Int32Array.from([4,2,1,2,1,1]),Int32Array.from([2,1,2,1,4,1]),Int32Array.from([2,1,4,1,2,1]),Int32Array.from([4,1,2,1,2,1]),Int32Array.from([1,1,1,1,4,3]),Int32Array.from([1,1,1,3,4,1]),Int32Array.from([1,3,1,1,4,1]),Int32Array.from([1,1,4,1,1,3]),Int32Array.from([1,1,4,3,1,1]),Int32Array.from([4,1,1,1,1,3]),Int32Array.from([4,1,1,3,1,1]),Int32Array.from([1,1,3,1,4,1]),Int32Array.from([1,1,4,1,3,1]),Int32Array.from([3,1,1,1,4,1]),Int32Array.from([4,1,1,1,3,1]),Int32Array.from([2,1,1,4,1,2]),Int32Array.from([2,1,1,2,1,4]),Int32Array.from([2,1,1,2,3,2]),Int32Array.from([2,3,3,1,1,1,2])],Code128Reader.MAX_AVG_VARIANCE=.25,Code128Reader.MAX_INDIVIDUAL_VARIANCE=.7,Code128Reader.CODE_SHIFT=98,Code128Reader.CODE_CODE_C=99,Code128Reader.CODE_CODE_B=100,Code128Reader.CODE_CODE_A=101,Code128Reader.CODE_FNC_1=102,Code128Reader.CODE_FNC_2=97,Code128Reader.CODE_FNC_3=96,Code128Reader.CODE_FNC_4_A=101,Code128Reader.CODE_FNC_4_B=100,Code128Reader.CODE_START_A=103,Code128Reader.CODE_START_B=104,Code128Reader.CODE_START_C=105,Code128Reader.CODE_STOP=106;
//# sourceMappingURL=/sm/f6f83c3f93532f4c4188e471746648dab51708e5fafae35e4c3d31bbf4bfb89f.map