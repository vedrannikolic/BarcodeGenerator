/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/EAN13Reader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import UPCEANReader from"./UPCEANReader";import NotFoundException from"../NotFoundException";export default class EAN13Reader extends UPCEANReader{constructor(){super(),this.decodeMiddleCounters=Int32Array.from([0,0,0,0])}decodeMiddle(e,r,t){let o=this.decodeMiddleCounters;o[0]=0,o[1]=0,o[2]=0,o[3]=0;let d=e.getSize(),a=r[1],i=0;for(let r=0;r<6&&a<d;r++){let d=UPCEANReader.decodeDigit(e,o,a,UPCEANReader.L_AND_G_PATTERNS);t+=String.fromCharCode("0".charCodeAt(0)+d%10);for(let e of o)a+=e;d>=10&&(i|=1<<5-r)}t=EAN13Reader.determineFirstDigit(t,i),a=UPCEANReader.findGuardPattern(e,a,!0,UPCEANReader.MIDDLE_PATTERN,new Int32Array(UPCEANReader.MIDDLE_PATTERN.length).fill(0))[1];for(let r=0;r<6&&a<d;r++){let r=UPCEANReader.decodeDigit(e,o,a,UPCEANReader.L_PATTERNS);t+=String.fromCharCode("0".charCodeAt(0)+r);for(let e of o)a+=e}return{rowOffset:a,resultString:t}}getBarcodeFormat(){return BarcodeFormat.EAN_13}static determineFirstDigit(e,r){for(let t=0;t<10;t++)if(r===this.FIRST_DIGIT_ENCODINGS[t])return e=String.fromCharCode("0".charCodeAt(0)+t)+e;throw new NotFoundException}}EAN13Reader.FIRST_DIGIT_ENCODINGS=[0,11,13,14,19,25,28,21,22,26];
//# sourceMappingURL=/sm/e46753000d38388aa9d2b38e1ecb0a23429cf693d9dcc719d9a35e4cb2b30fdb.map