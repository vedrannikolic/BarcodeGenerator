/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/MultiFormatUPCEANReader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BarcodeFormat from"../BarcodeFormat";import DecodeHintType from"../DecodeHintType";import Result from"../Result";import OneDReader from"./OneDReader";import EAN13Reader from"./EAN13Reader";import EAN8Reader from"./EAN8Reader";import UPCAReader from"./UPCAReader";import NotFoundException from"../NotFoundException";import UPCEReader from"./UPCEReader";export default class MultiFormatUPCEANReader extends OneDReader{constructor(e){super();let r=null==e?null:e.get(DecodeHintType.POSSIBLE_FORMATS),t=[];null!=r&&(r.indexOf(BarcodeFormat.EAN_13)>-1&&t.push(new EAN13Reader),r.indexOf(BarcodeFormat.UPC_A)>-1&&t.push(new UPCAReader),r.indexOf(BarcodeFormat.EAN_8)>-1&&t.push(new EAN8Reader),r.indexOf(BarcodeFormat.UPC_E)>-1&&t.push(new UPCEReader)),0===t.length&&(t.push(new EAN13Reader),t.push(new UPCAReader),t.push(new EAN8Reader),t.push(new UPCEReader)),this.readers=t}decodeRow(e,r,t){for(let o of this.readers)try{const a=o.decodeRow(e,r,t),d=a.getBarcodeFormat()===BarcodeFormat.EAN_13&&"0"===a.getText().charAt(0),n=null==t?null:t.get(DecodeHintType.POSSIBLE_FORMATS),s=null==n||n.includes(BarcodeFormat.UPC_A);if(d&&s){const e=a.getRawBytes(),r=new Result(a.getText().substring(1),e,e?e.length:null,a.getResultPoints(),BarcodeFormat.UPC_A);return r.putAllMetadata(a.getResultMetadata()),r}return a}catch(e){}throw new NotFoundException}reset(){for(let e of this.readers)e.reset()}}
//# sourceMappingURL=/sm/2fcb053f880a1c03796ba0705e696c67cdb8481fc40c2e4399a9bb84d50104a3.map