/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/oned/UPCEReader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import UPCEANReader from"./UPCEANReader";import StringBuilder from"../util/StringBuilder";import NotFoundException from"../NotFoundException";import BarcodeFormat from"../BarcodeFormat";export default class UPCEReader extends UPCEANReader{constructor(){super(),this.decodeMiddleCounters=new Int32Array(4)}decodeMiddle(e,r,t){const d=this.decodeMiddleCounters.map((e=>e));d[0]=0,d[1]=0,d[2]=0,d[3]=0;const a=e.getSize();let n=r[1],o=0;for(let r=0;r<6&&n<a;r++){const a=UPCEReader.decodeDigit(e,d,n,UPCEReader.L_AND_G_PATTERNS);t+=String.fromCharCode("0".charCodeAt(0)+a%10);for(let e of d)n+=e;a>=10&&(o|=1<<5-r)}return UPCEReader.determineNumSysAndCheckDigit(new StringBuilder(t),o),n}decodeEnd(e,r){return UPCEReader.findGuardPatternWithoutCounters(e,r,!0,UPCEReader.MIDDLE_END_PATTERN)}checkChecksum(e){return UPCEANReader.checkChecksum(UPCEReader.convertUPCEtoUPCA(e))}static determineNumSysAndCheckDigit(e,r){for(let t=0;t<=1;t++)for(let d=0;d<10;d++)if(r===this.NUMSYS_AND_CHECK_DIGIT_PATTERNS[t][d])return e.insert(0,"0"+t),void e.append("0"+d);throw NotFoundException.getNotFoundInstance()}getBarcodeFormat(){return BarcodeFormat.UPC_E}static convertUPCEtoUPCA(e){const r=e.slice(1,7).split("").map((e=>e.charCodeAt(0))),t=new StringBuilder;t.append(e.charAt(0));let d=r[5];switch(d){case 0:case 1:case 2:t.appendChars(r,0,2),t.append(d),t.append("0000"),t.appendChars(r,2,3);break;case 3:t.appendChars(r,0,3),t.append("00000"),t.appendChars(r,3,2);break;case 4:t.appendChars(r,0,4),t.append("00000"),t.append(r[4]);break;default:t.appendChars(r,0,5),t.append("0000"),t.append(d)}return e.length>=8&&t.append(e.charAt(7)),t.toString()}}UPCEReader.MIDDLE_END_PATTERN=Int32Array.from([1,1,1,1,1,1]),UPCEReader.NUMSYS_AND_CHECK_DIGIT_PATTERNS=[Int32Array.from([56,52,50,49,44,38,35,42,41,37]),Int32Array.from([7,11,13,14,19,25,28,21,22,1])];
//# sourceMappingURL=/sm/243e017aba61915a770aedb91e475ee5b4fcc9685468985660e3012ed9a0c98f.map