/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/pdf417/detector/Detector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ResultPoint from"../../ResultPoint";import System from"../../util/System";import Arrays from"../../util/Arrays";import PDF417DetectorResult from"./PDF417DetectorResult";export default class Detector{static detectMultiple(t,e,r){let n=t.getBlackMatrix(),o=Detector.detect(r,n);return o.length||(n=n.clone(),n.rotate180(),o=Detector.detect(r,n)),new PDF417DetectorResult(n,o)}static detect(t,e){const r=new Array;let n=0,o=0,c=!1;for(;n<e.getHeight();){const a=Detector.findVertices(e,n,o);if(null!=a[0]||null!=a[3]){if(c=!0,r.push(a),!t)break;null!=a[2]?(o=Math.trunc(a[2].getX()),n=Math.trunc(a[2].getY())):(o=Math.trunc(a[4].getX()),n=Math.trunc(a[4].getY()))}else{if(!c)break;c=!1,o=0;for(const t of r)null!=t[1]&&(n=Math.trunc(Math.max(n,t[1].getY()))),null!=t[3]&&(n=Math.max(n,Math.trunc(t[3].getY())));n+=Detector.ROW_STEP}}return r}static findVertices(t,e,r){const n=t.getHeight(),o=t.getWidth(),c=new Array(8);return Detector.copyToResult(c,Detector.findRowsWithPattern(t,n,o,e,r,Detector.START_PATTERN),Detector.INDEXES_START_PATTERN),null!=c[4]&&(r=Math.trunc(c[4].getX()),e=Math.trunc(c[4].getY())),Detector.copyToResult(c,Detector.findRowsWithPattern(t,n,o,e,r,Detector.STOP_PATTERN),Detector.INDEXES_STOP_PATTERN),c}static copyToResult(t,e,r){for(let n=0;n<r.length;n++)t[r[n]]=e[n]}static findRowsWithPattern(t,e,r,n,o,c){const a=new Array(4);let l=!1;const D=new Int32Array(c.length);for(;n<e;n+=Detector.ROW_STEP){let e=Detector.findGuardPattern(t,o,n,r,!1,c,D);if(null!=e){for(;n>0;){const a=Detector.findGuardPattern(t,o,--n,r,!1,c,D);if(null==a){n++;break}e=a}a[0]=new ResultPoint(e[0],n),a[1]=new ResultPoint(e[1],n),l=!0;break}}let A=n+1;if(l){let n=0,o=Int32Array.from([Math.trunc(a[0].getX()),Math.trunc(a[1].getX())]);for(;A<e;A++){const e=Detector.findGuardPattern(t,o[0],A,r,!1,c,D);if(null!=e&&Math.abs(o[0]-e[0])<Detector.MAX_PATTERN_DRIFT&&Math.abs(o[1]-e[1])<Detector.MAX_PATTERN_DRIFT)o=e,n=0;else{if(n>Detector.SKIPPED_ROW_COUNT_MAX)break;n++}}A-=n+1,a[2]=new ResultPoint(o[0],A),a[3]=new ResultPoint(o[1],A)}return A-n<Detector.BARCODE_MIN_HEIGHT&&Arrays.fill(a,null),a}static findGuardPattern(t,e,r,n,o,c,a){Arrays.fillWithin(a,0,a.length,0);let l=e,D=0;for(;t.get(l,r)&&l>0&&D++<Detector.MAX_PIXEL_DRIFT;)l--;let A=l,i=0,u=c.length;for(let e=o;A<n;A++){if(t.get(A,r)!==e)a[i]++;else{if(i===u-1){if(Detector.patternMatchVariance(a,c,Detector.MAX_INDIVIDUAL_VARIANCE)<Detector.MAX_AVG_VARIANCE)return new Int32Array([l,A]);l+=a[0]+a[1],System.arraycopy(a,2,a,0,i-1),a[i-1]=0,a[i]=0,i--}else i++;a[i]=1,e=!e}}return i===u-1&&Detector.patternMatchVariance(a,c,Detector.MAX_INDIVIDUAL_VARIANCE)<Detector.MAX_AVG_VARIANCE?new Int32Array([l,A-1]):null}static patternMatchVariance(t,e,r){let n=t.length,o=0,c=0;for(let r=0;r<n;r++)o+=t[r],c+=e[r];if(o<c)return 1/0;let a=o/c;r*=a;let l=0;for(let o=0;o<n;o++){let n=t[o],c=e[o]*a,D=n>c?n-c:c-n;if(D>r)return 1/0;l+=D}return l/o}}Detector.INDEXES_START_PATTERN=Int32Array.from([0,4,1,5]),Detector.INDEXES_STOP_PATTERN=Int32Array.from([6,2,7,3]),Detector.MAX_AVG_VARIANCE=.42,Detector.MAX_INDIVIDUAL_VARIANCE=.8,Detector.START_PATTERN=Int32Array.from([8,1,1,1,1,1,1,3]),Detector.STOP_PATTERN=Int32Array.from([7,1,1,3,1,1,1,2,1]),Detector.MAX_PIXEL_DRIFT=3,Detector.MAX_PATTERN_DRIFT=5,Detector.SKIPPED_ROW_COUNT_MAX=25,Detector.ROW_STEP=5,Detector.BARCODE_MIN_HEIGHT=10;
//# sourceMappingURL=/sm/9e99c90613acd05ab98c1325e2f57ee59cf6872e38dea8e8100197be4624050c.map