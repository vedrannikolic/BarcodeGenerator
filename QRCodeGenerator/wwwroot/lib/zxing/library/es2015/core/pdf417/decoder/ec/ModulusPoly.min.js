/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/pdf417/decoder/ec/ModulusPoly.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import IllegalArgumentException from"../../../IllegalArgumentException";import System from"../../../util/System";import StringBuilder from"../../../util/StringBuilder";export default class ModulusPoly{constructor(e,t){if(0===t.length)throw new IllegalArgumentException;this.field=e;let i=t.length;if(i>1&&0===t[0]){let e=1;for(;e<i&&0===t[e];)e++;e===i?this.coefficients=new Int32Array([0]):(this.coefficients=new Int32Array(i-e),System.arraycopy(t,e,this.coefficients,0,this.coefficients.length))}else this.coefficients=t}getCoefficients(){return this.coefficients}getDegree(){return this.coefficients.length-1}isZero(){return 0===this.coefficients[0]}getCoefficient(e){return this.coefficients[this.coefficients.length-1-e]}evaluateAt(e){if(0===e)return this.getCoefficient(0);if(1===e){let e=0;for(let t of this.coefficients)e=this.field.add(e,t);return e}let t=this.coefficients[0],i=this.coefficients.length;for(let l=1;l<i;l++)t=this.field.add(this.field.multiply(e,t),this.coefficients[l]);return t}add(e){if(!this.field.equals(e.field))throw new IllegalArgumentException("ModulusPolys do not have same ModulusGF field");if(this.isZero())return e;if(e.isZero())return this;let t=this.coefficients,i=e.coefficients;if(t.length>i.length){let e=t;t=i,i=e}let l=new Int32Array(i.length),n=i.length-t.length;System.arraycopy(i,0,l,0,n);for(let e=n;e<i.length;e++)l[e]=this.field.add(t[e-n],i[e]);return new ModulusPoly(this.field,l)}subtract(e){if(!this.field.equals(e.field))throw new IllegalArgumentException("ModulusPolys do not have same ModulusGF field");return e.isZero()?this:this.add(e.negative())}multiply(e){return e instanceof ModulusPoly?this.multiplyOther(e):this.multiplyScalar(e)}multiplyOther(e){if(!this.field.equals(e.field))throw new IllegalArgumentException("ModulusPolys do not have same ModulusGF field");if(this.isZero()||e.isZero())return new ModulusPoly(this.field,new Int32Array([0]));let t=this.coefficients,i=t.length,l=e.coefficients,n=l.length,s=new Int32Array(i+n-1);for(let e=0;e<i;e++){let i=t[e];for(let t=0;t<n;t++)s[e+t]=this.field.add(s[e+t],this.field.multiply(i,l[t]))}return new ModulusPoly(this.field,s)}negative(){let e=this.coefficients.length,t=new Int32Array(e);for(let i=0;i<e;i++)t[i]=this.field.subtract(0,this.coefficients[i]);return new ModulusPoly(this.field,t)}multiplyScalar(e){if(0===e)return new ModulusPoly(this.field,new Int32Array([0]));if(1===e)return this;let t=this.coefficients.length,i=new Int32Array(t);for(let l=0;l<t;l++)i[l]=this.field.multiply(this.coefficients[l],e);return new ModulusPoly(this.field,i)}multiplyByMonomial(e,t){if(e<0)throw new IllegalArgumentException;if(0===t)return new ModulusPoly(this.field,new Int32Array([0]));let i=this.coefficients.length,l=new Int32Array(i+e);for(let e=0;e<i;e++)l[e]=this.field.multiply(this.coefficients[e],t);return new ModulusPoly(this.field,l)}toString(){let e=new StringBuilder;for(let t=this.getDegree();t>=0;t--){let i=this.getCoefficient(t);0!==i&&(i<0?(e.append(" - "),i=-i):e.length()>0&&e.append(" + "),0!==t&&1===i||e.append(i),0!==t&&(1===t?e.append("x"):(e.append("x^"),e.append(t))))}return e.toString()}}
//# sourceMappingURL=/sm/ea3f5c617f31ba1a54eaaf6204853d52da707ea68f3eab5f9b4fc856cf0fc456.map