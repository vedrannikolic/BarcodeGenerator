/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/common/GlobalHistogramBinarizer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Binarizer from"../Binarizer";import BitArray from"./BitArray";import BitMatrix from"./BitMatrix";import NotFoundException from"../NotFoundException";export default class GlobalHistogramBinarizer extends Binarizer{constructor(t){super(t),this.luminances=GlobalHistogramBinarizer.EMPTY,this.buckets=new Int32Array(GlobalHistogramBinarizer.LUMINANCE_BUCKETS)}getBlackRow(t,r){const i=this.getLuminanceSource(),e=i.getWidth();null==r||r.getSize()<e?r=new BitArray(e):r.clear(),this.initArrays(e);const o=i.getRow(t,this.luminances),a=this.buckets;for(let t=0;t<e;t++)a[(255&o[t])>>GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;const n=GlobalHistogramBinarizer.estimateBlackPoint(a);if(e<3)for(let t=0;t<e;t++)(255&o[t])<n&&r.set(t);else{let t=255&o[0],i=255&o[1];for(let a=1;a<e-1;a++){const e=255&o[a+1];(4*i-t-e)/2<n&&r.set(a),t=i,i=e}}return r}getBlackMatrix(){const t=this.getLuminanceSource(),r=t.getWidth(),i=t.getHeight(),e=new BitMatrix(r,i);this.initArrays(r);const o=this.buckets;for(let e=1;e<5;e++){const a=Math.floor(i*e/5),n=t.getRow(a,this.luminances),l=Math.floor(4*r/5);for(let t=Math.floor(r/5);t<l;t++){o[(255&n[t])>>GlobalHistogramBinarizer.LUMINANCE_SHIFT]++}}const a=GlobalHistogramBinarizer.estimateBlackPoint(o),n=t.getMatrix();for(let t=0;t<i;t++){const i=t*r;for(let o=0;o<r;o++){(255&n[i+o])<a&&e.set(o,t)}}return e}createBinarizer(t){return new GlobalHistogramBinarizer(t)}initArrays(t){this.luminances.length<t&&(this.luminances=new Uint8ClampedArray(t));const r=this.buckets;for(let t=0;t<GlobalHistogramBinarizer.LUMINANCE_BUCKETS;t++)r[t]=0}static estimateBlackPoint(t){const r=t.length;let i=0,e=0,o=0;for(let a=0;a<r;a++)t[a]>o&&(e=a,o=t[a]),t[a]>i&&(i=t[a]);let a=0,n=0;for(let i=0;i<r;i++){const r=i-e,o=t[i]*r*r;o>n&&(a=i,n=o)}if(e>a){const t=e;e=a,a=t}if(a-e<=r/16)throw new NotFoundException;let l=a-1,s=-1;for(let r=a-1;r>e;r--){const o=r-e,n=o*o*(a-r)*(i-t[r]);n>s&&(l=r,s=n)}return l<<GlobalHistogramBinarizer.LUMINANCE_SHIFT}}GlobalHistogramBinarizer.LUMINANCE_BITS=5,GlobalHistogramBinarizer.LUMINANCE_SHIFT=8-GlobalHistogramBinarizer.LUMINANCE_BITS,GlobalHistogramBinarizer.LUMINANCE_BUCKETS=1<<GlobalHistogramBinarizer.LUMINANCE_BITS,GlobalHistogramBinarizer.EMPTY=Uint8ClampedArray.from([0]);
//# sourceMappingURL=/sm/fae0cd04a7b2736214c43a0ccbf6eea7006837c8cdb6a7c70314527524314863.map