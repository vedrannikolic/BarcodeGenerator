/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/common/reedsolomon/GenericGF.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import GenericGFPoly from"./GenericGFPoly";import AbstractGenericGF from"./AbstractGenericGF";import Integer from"../../util/Integer";import IllegalArgumentException from"../../IllegalArgumentException";import ArithmeticException from"../../ArithmeticException";export default class GenericGF extends AbstractGenericGF{constructor(e,r,t){super(),this.primitive=e,this.size=r,this.generatorBase=t;const i=new Int32Array(r);let n=1;for(let t=0;t<r;t++)i[t]=n,n*=2,n>=r&&(n^=e,n&=r-1);this.expTable=i;const G=new Int32Array(r);for(let e=0;e<r-1;e++)G[i[e]]=e;this.logTable=G,this.zero=new GenericGFPoly(this,Int32Array.from([0])),this.one=new GenericGFPoly(this,Int32Array.from([1]))}getZero(){return this.zero}getOne(){return this.one}buildMonomial(e,r){if(e<0)throw new IllegalArgumentException;if(0===r)return this.zero;const t=new Int32Array(e+1);return t[0]=r,new GenericGFPoly(this,t)}inverse(e){if(0===e)throw new ArithmeticException;return this.expTable[this.size-this.logTable[e]-1]}multiply(e,r){return 0===e||0===r?0:this.expTable[(this.logTable[e]+this.logTable[r])%(this.size-1)]}getSize(){return this.size}getGeneratorBase(){return this.generatorBase}toString(){return"GF(0x"+Integer.toHexString(this.primitive)+","+this.size+")"}equals(e){return e===this}}GenericGF.AZTEC_DATA_12=new GenericGF(4201,4096,1),GenericGF.AZTEC_DATA_10=new GenericGF(1033,1024,1),GenericGF.AZTEC_DATA_6=new GenericGF(67,64,1),GenericGF.AZTEC_PARAM=new GenericGF(19,16,1),GenericGF.QR_CODE_FIELD_256=new GenericGF(285,256,0),GenericGF.DATA_MATRIX_FIELD_256=new GenericGF(301,256,1),GenericGF.AZTEC_DATA_8=GenericGF.DATA_MATRIX_FIELD_256,GenericGF.MAXICODE_FIELD_64=GenericGF.AZTEC_DATA_6;
//# sourceMappingURL=/sm/e5cd9c744590d63136c09263b6837a7c007e0fee9c85ed74eab1fc7dc41dbc28.map