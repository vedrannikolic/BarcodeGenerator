/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/common/detector/WhiteRectangleDetector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ResultPoint from"../../ResultPoint";import MathUtils from"./MathUtils";import NotFoundException from"../../NotFoundException";export default class WhiteRectangleDetector{constructor(t,e,n,i){this.image=t,this.height=t.getHeight(),this.width=t.getWidth(),null==e&&(e=WhiteRectangleDetector.INIT_SIZE),null==n&&(n=t.getWidth()/2|0),null==i&&(i=t.getHeight()/2|0);const o=e/2|0;if(this.leftInit=n-o,this.rightInit=n+o,this.upInit=i-o,this.downInit=i+o,this.upInit<0||this.leftInit<0||this.downInit>=this.height||this.rightInit>=this.width)throw new NotFoundException}detect(){let t=this.leftInit,e=this.rightInit,n=this.upInit,i=this.downInit,o=!1,l=!0,s=!1,h=!1,r=!1,u=!1,c=!1;const g=this.width,a=this.height;for(;l;){l=!1;let f=!0;for(;(f||!h)&&e<g;)f=this.containsBlackPoint(n,i,e,!1),f?(e++,l=!0,h=!0):h||e++;if(e>=g){o=!0;break}let w=!0;for(;(w||!r)&&i<a;)w=this.containsBlackPoint(t,e,i,!0),w?(i++,l=!0,r=!0):r||i++;if(i>=a){o=!0;break}let d=!0;for(;(d||!u)&&t>=0;)d=this.containsBlackPoint(n,i,t,!1),d?(t--,l=!0,u=!0):u||t--;if(t<0){o=!0;break}let P=!0;for(;(P||!c)&&n>=0;)P=this.containsBlackPoint(t,e,n,!0),P?(n--,l=!0,c=!0):c||n--;if(n<0){o=!0;break}l&&(s=!0)}if(!o&&s){const o=e-t;let l=null;for(let e=1;null===l&&e<o;e++)l=this.getBlackPointOnSegment(t,i-e,t+e,i);if(null==l)throw new NotFoundException;let s=null;for(let e=1;null===s&&e<o;e++)s=this.getBlackPointOnSegment(t,n+e,t+e,n);if(null==s)throw new NotFoundException;let h=null;for(let t=1;null===h&&t<o;t++)h=this.getBlackPointOnSegment(e,n+t,e-t,n);if(null==h)throw new NotFoundException;let r=null;for(let t=1;null===r&&t<o;t++)r=this.getBlackPointOnSegment(e,i-t,e-t,i);if(null==r)throw new NotFoundException;return this.centerEdges(r,l,h,s)}throw new NotFoundException}getBlackPointOnSegment(t,e,n,i){const o=MathUtils.round(MathUtils.distance(t,e,n,i)),l=(n-t)/o,s=(i-e)/o,h=this.image;for(let n=0;n<o;n++){const i=MathUtils.round(t+n*l),o=MathUtils.round(e+n*s);if(h.get(i,o))return new ResultPoint(i,o)}return null}centerEdges(t,e,n,i){const o=t.getX(),l=t.getY(),s=e.getX(),h=e.getY(),r=n.getX(),u=n.getY(),c=i.getX(),g=i.getY(),a=WhiteRectangleDetector.CORR;return o<this.width/2?[new ResultPoint(c-a,g+a),new ResultPoint(s+a,h+a),new ResultPoint(r-a,u-a),new ResultPoint(o+a,l-a)]:[new ResultPoint(c+a,g+a),new ResultPoint(s+a,h-a),new ResultPoint(r-a,u+a),new ResultPoint(o-a,l-a)]}containsBlackPoint(t,e,n,i){const o=this.image;if(i){for(let i=t;i<=e;i++)if(o.get(i,n))return!0}else for(let i=t;i<=e;i++)if(o.get(n,i))return!0;return!1}}WhiteRectangleDetector.INIT_SIZE=10,WhiteRectangleDetector.CORR=1;
//# sourceMappingURL=/sm/09e4839e3132274a6c84a033acc888aa1ff97867a5668c0abc68ca986f3a466e.map