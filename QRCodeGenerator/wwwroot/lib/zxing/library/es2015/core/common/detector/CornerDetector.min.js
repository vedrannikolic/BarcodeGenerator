/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/common/detector/CornerDetector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ResultPoint from"../../ResultPoint";import NotFoundException from"../../NotFoundException";export default class CornerDetector{constructor(t,e,i,n,o){this.image=t,this.height=t.getHeight(),this.width=t.getWidth();const r=e/2;if(this.leftInit=i-r,this.rightInit=i+r,this.upInit=n-r,this.downInit=n+r,this.targetMatrixSize=2*o,this.upInit<0||this.leftInit<0||this.downInit>=this.height||this.rightInit>=this.width)throw new NotFoundException}detect(){let t=this.leftInit,e=this.rightInit,i=this.upInit,n=this.downInit,o=!1,r=!0,g=!1,s=!1,h=!1,a=!1,l=!1;for(;r;){r=!1;let u=!0;for(;(u||!s)&&e<this.width;)u=this.containsBlackPoint(i,n,e,!1),u?(e++,r=!0,s=!0):s||e++;if(e>=this.width){o=!0;break}let f=!0;for(;(f||!h)&&n<this.height;)f=this.containsBlackPoint(t,e,n,!0),f?(n++,r=!0,h=!0):h||n++;if(n>=this.height){o=!0;break}let w=!0;for(;(w||!a)&&t>=0;)w=this.containsBlackPoint(i,n,t,!1),w?(t--,r=!0,a=!0):a||t--;if(t<0){o=!0;break}let c=!0;for(;(c||!l)&&i>=0;)c=this.containsBlackPoint(t,e,i,!0),c?(i--,r=!0,l=!0):l||i--;if(i<0){o=!0;break}r&&(g=!0)}if(!o&&g)return this.findCorners(e,t,n,i);throw new NotFoundException}findCorners(t,e,i,n){const o=t-e,r=i-n,g=16/this.targetMatrixSize,s=4/this.targetMatrixSize,h=o*s,a=r*s,l=h+(t-e)*g,u=a+(i-n)*g,f=new ResultPoint(e-h,n-a),w=new ResultPoint(t+h,n-a),c=new ResultPoint(t+h,i+a),P=new ResultPoint(e-h,i+a),X=new ResultPoint(f.getX()+l,f.getY()+u),d=new ResultPoint(w.getX()-l,w.getY()+u),Y=new ResultPoint(c.getX()-l,c.getY()-u),m=new ResultPoint(P.getX()+l,P.getY()-u),R=this.getCornerFromArea(f.getX(),X.getX(),f.getY(),X.getY(),!1,!1),I=this.getCornerFromArea(d.getX(),w.getX(),w.getY(),d.getY(),!0,!1),p=this.getCornerFromArea(Y.getX(),c.getX(),Y.getY(),c.getY(),!0,!0),x=this.getCornerFromArea(P.getX(),m.getX(),m.getY(),P.getY(),!1,!0),F=(I.getX()-R.getX())/this.targetMatrixSize,k=(p.getY()-I.getY())/this.targetMatrixSize;return[new ResultPoint(R.getX()+F,R.getY()+k),new ResultPoint(I.getX()-F,I.getY()+k),new ResultPoint(p.getX()-F,p.getY()-k),new ResultPoint(x.getX()+F,x.getY()-k)]}getCornerFromArea(t,e,i,n,o,r){let g=o?0:Number.MAX_VALUE,s=r?0:Number.MAX_VALUE;for(let h=t;h<e;h++)for(let t=i;t<n;t++)h>0&&t>0&&h<this.image.getWidth()&&t<this.image.getHeight()&&this.image.get(h,t)&&(o?h>g&&(g=h):h<g&&(g=h),r?t>s&&(s=t):t<s&&(s=t));if(0===g||0===s)throw new NotFoundException;return new ResultPoint(g,s)}containsBlackPoint(t,e,i,n){if(n){for(let n=t;n<=e;n++)if(this.image.get(n,i))return!0}else for(let n=t;n<=e;n++)if(this.image.get(i,n))return!0;return!1}}
//# sourceMappingURL=/sm/dca347587be5689f39cdb0d3f88e4d399bd70548dc40cbeb73e235e4d4bac74d.map