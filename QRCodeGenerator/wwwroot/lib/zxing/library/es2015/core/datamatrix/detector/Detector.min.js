/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/datamatrix/detector/Detector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import WhiteRectangleDetector from"../../common/detector/WhiteRectangleDetector";import DetectorResult from"../../common/DetectorResult";import GridSamplerInstance from"../../common/GridSamplerInstance";import NotFoundException from"../../NotFoundException";import ResultPoint from"../../ResultPoint";export default class Detector{constructor(t){this.image=t,this.rectangleDetector=new WhiteRectangleDetector(this.image)}detect(){const t=this.rectangleDetector.detect();let e=this.detectSolid1(t);if(e=this.detectSolid2(e),e[3]=this.correctTopRight(e),!e[3])throw new NotFoundException;e=this.shiftToModuleCenter(e);const i=e[0],n=e[1],s=e[2],o=e[3];let r=this.transitionsBetween(i,o)+1,a=this.transitionsBetween(s,o)+1;1==(1&r)&&(r+=1),1==(1&a)&&(a+=1),4*r<7*a&&4*a<7*r&&(r=a=Math.max(r,a));let h=Detector.sampleGrid(this.image,i,n,s,o,r,a);return new DetectorResult(h,[i,n,s,o])}static shiftPoint(t,e,i){let n=(e.getX()-t.getX())/(i+1),s=(e.getY()-t.getY())/(i+1);return new ResultPoint(t.getX()+n,t.getY()+s)}static moveAway(t,e,i){let n=t.getX(),s=t.getY();return n<e?n-=1:n+=1,s<i?s-=1:s+=1,new ResultPoint(n,s)}detectSolid1(t){let e=t[0],i=t[1],n=t[3],s=t[2],o=this.transitionsBetween(e,i),r=this.transitionsBetween(i,n),a=this.transitionsBetween(n,s),h=this.transitionsBetween(s,e),c=o,g=[s,e,i,n];return c>r&&(c=r,g[0]=e,g[1]=i,g[2]=n,g[3]=s),c>a&&(c=a,g[0]=i,g[1]=n,g[2]=s,g[3]=e),c>h&&(g[0]=n,g[1]=s,g[2]=e,g[3]=i),g}detectSolid2(t){let e=t[0],i=t[1],n=t[2],s=t[3],o=this.transitionsBetween(e,s),r=Detector.shiftPoint(i,n,4*(o+1)),a=Detector.shiftPoint(n,i,4*(o+1));return this.transitionsBetween(r,e)<this.transitionsBetween(a,s)?(t[0]=e,t[1]=i,t[2]=n,t[3]=s):(t[0]=i,t[1]=n,t[2]=s,t[3]=e),t}correctTopRight(t){let e=t[0],i=t[1],n=t[2],s=t[3],o=this.transitionsBetween(e,s),r=this.transitionsBetween(i,s),a=Detector.shiftPoint(e,i,4*(r+1)),h=Detector.shiftPoint(n,i,4*(o+1));o=this.transitionsBetween(a,s),r=this.transitionsBetween(h,s);let c=new ResultPoint(s.getX()+(n.getX()-i.getX())/(o+1),s.getY()+(n.getY()-i.getY())/(o+1)),g=new ResultPoint(s.getX()+(e.getX()-i.getX())/(r+1),s.getY()+(e.getY()-i.getY())/(r+1));return this.isValid(c)?this.isValid(g)?this.transitionsBetween(a,c)+this.transitionsBetween(h,c)>this.transitionsBetween(a,g)+this.transitionsBetween(h,g)?c:g:c:this.isValid(g)?g:null}shiftToModuleCenter(t){let e=t[0],i=t[1],n=t[2],s=t[3],o=this.transitionsBetween(e,s)+1,r=this.transitionsBetween(n,s)+1,a=Detector.shiftPoint(e,i,4*r),h=Detector.shiftPoint(n,i,4*o);o=this.transitionsBetween(a,s)+1,r=this.transitionsBetween(h,s)+1,1==(1&o)&&(o+=1),1==(1&r)&&(r+=1);let c,g,l=(e.getX()+i.getX()+n.getX()+s.getX())/4,m=(e.getY()+i.getY()+n.getY()+s.getY())/4;return e=Detector.moveAway(e,l,m),i=Detector.moveAway(i,l,m),n=Detector.moveAway(n,l,m),s=Detector.moveAway(s,l,m),a=Detector.shiftPoint(e,i,4*r),a=Detector.shiftPoint(a,s,4*o),c=Detector.shiftPoint(i,e,4*r),c=Detector.shiftPoint(c,n,4*o),h=Detector.shiftPoint(n,s,4*r),h=Detector.shiftPoint(h,i,4*o),g=Detector.shiftPoint(s,n,4*r),g=Detector.shiftPoint(g,e,4*o),[a,c,h,g]}isValid(t){return t.getX()>=0&&t.getX()<this.image.getWidth()&&t.getY()>0&&t.getY()<this.image.getHeight()}static sampleGrid(t,e,i,n,s,o,r){return GridSamplerInstance.getInstance().sampleGrid(t,o,r,.5,.5,o-.5,.5,o-.5,r-.5,.5,r-.5,e.getX(),e.getY(),s.getX(),s.getY(),n.getX(),n.getY(),i.getX(),i.getY())}transitionsBetween(t,e){let i=Math.trunc(t.getX()),n=Math.trunc(t.getY()),s=Math.trunc(e.getX()),o=Math.trunc(e.getY()),r=Math.abs(o-n)>Math.abs(s-i);if(r){let t=i;i=n,n=t,t=s,s=o,o=t}let a=Math.abs(s-i),h=Math.abs(o-n),c=-a/2,g=n<o?1:-1,l=i<s?1:-1,m=0,w=this.image.get(r?n:i,r?i:n);for(let t=i,e=n;t!==s;t+=l){let i=this.image.get(r?e:t,r?t:e);if(i!==w&&(m++,w=i),c+=h,c>0){if(e===o)break;e+=g,c-=a}}return m}}
//# sourceMappingURL=/sm/81142e455e93440810d22cb1e4af969887471e278a5f694fc65c7f6b9bf0807a.map