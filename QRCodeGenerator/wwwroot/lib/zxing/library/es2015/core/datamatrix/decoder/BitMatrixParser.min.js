/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/datamatrix/decoder/BitMatrixParser.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BitMatrix from"../../common/BitMatrix";import Version from"./Version";import FormatException from"../../FormatException";import IllegalArgumentException from"../../IllegalArgumentException";export default class BitMatrixParser{constructor(e){const t=e.getHeight();if(t<8||t>144||0!=(1&t))throw new FormatException;this.version=BitMatrixParser.readVersion(e),this.mappingBitMatrix=this.extractDataRegion(e),this.readMappingMatrix=new BitMatrix(this.mappingBitMatrix.getWidth(),this.mappingBitMatrix.getHeight())}getVersion(){return this.version}static readVersion(e){const t=e.getHeight(),i=e.getWidth();return Version.getVersionForDimensions(t,i)}readCodewords(){const e=new Int8Array(this.version.getTotalCodewords());let t=0,i=4,r=0;const o=this.mappingBitMatrix.getHeight(),s=this.mappingBitMatrix.getWidth();let a=!1,d=!1,h=!1,n=!1;do{if(i!==o||0!==r||a)if(i!==o-2||0!==r||0==(3&s)||d)if(i!==o+4||2!==r||0!=(7&s)||h)if(i!==o-2||0!==r||4!=(7&s)||n){do{i<o&&r>=0&&!this.readMappingMatrix.get(r,i)&&(e[t++]=255&this.readUtah(i,r,o,s)),i-=2,r+=2}while(i>=0&&r<s);i+=1,r+=3;do{i>=0&&r<s&&!this.readMappingMatrix.get(r,i)&&(e[t++]=255&this.readUtah(i,r,o,s)),i+=2,r-=2}while(i<o&&r>=0);i+=3,r+=1}else e[t++]=255&this.readCorner4(o,s),i-=2,r+=2,n=!0;else e[t++]=255&this.readCorner3(o,s),i-=2,r+=2,h=!0;else e[t++]=255&this.readCorner2(o,s),i-=2,r+=2,d=!0;else e[t++]=255&this.readCorner1(o,s),i-=2,r+=2,a=!0}while(i<o||r<s);if(t!==this.version.getTotalCodewords())throw new FormatException;return e}readModule(e,t,i,r){return e<0&&(e+=i,t+=4-(i+4&7)),t<0&&(t+=r,e+=4-(r+4&7)),this.readMappingMatrix.set(t,e),this.mappingBitMatrix.get(t,e)}readUtah(e,t,i,r){let o=0;return this.readModule(e-2,t-2,i,r)&&(o|=1),o<<=1,this.readModule(e-2,t-1,i,r)&&(o|=1),o<<=1,this.readModule(e-1,t-2,i,r)&&(o|=1),o<<=1,this.readModule(e-1,t-1,i,r)&&(o|=1),o<<=1,this.readModule(e-1,t,i,r)&&(o|=1),o<<=1,this.readModule(e,t-2,i,r)&&(o|=1),o<<=1,this.readModule(e,t-1,i,r)&&(o|=1),o<<=1,this.readModule(e,t,i,r)&&(o|=1),o}readCorner1(e,t){let i=0;return this.readModule(e-1,0,e,t)&&(i|=1),i<<=1,this.readModule(e-1,1,e,t)&&(i|=1),i<<=1,this.readModule(e-1,2,e,t)&&(i|=1),i<<=1,this.readModule(0,t-2,e,t)&&(i|=1),i<<=1,this.readModule(0,t-1,e,t)&&(i|=1),i<<=1,this.readModule(1,t-1,e,t)&&(i|=1),i<<=1,this.readModule(2,t-1,e,t)&&(i|=1),i<<=1,this.readModule(3,t-1,e,t)&&(i|=1),i}readCorner2(e,t){let i=0;return this.readModule(e-3,0,e,t)&&(i|=1),i<<=1,this.readModule(e-2,0,e,t)&&(i|=1),i<<=1,this.readModule(e-1,0,e,t)&&(i|=1),i<<=1,this.readModule(0,t-4,e,t)&&(i|=1),i<<=1,this.readModule(0,t-3,e,t)&&(i|=1),i<<=1,this.readModule(0,t-2,e,t)&&(i|=1),i<<=1,this.readModule(0,t-1,e,t)&&(i|=1),i<<=1,this.readModule(1,t-1,e,t)&&(i|=1),i}readCorner3(e,t){let i=0;return this.readModule(e-1,0,e,t)&&(i|=1),i<<=1,this.readModule(e-1,t-1,e,t)&&(i|=1),i<<=1,this.readModule(0,t-3,e,t)&&(i|=1),i<<=1,this.readModule(0,t-2,e,t)&&(i|=1),i<<=1,this.readModule(0,t-1,e,t)&&(i|=1),i<<=1,this.readModule(1,t-3,e,t)&&(i|=1),i<<=1,this.readModule(1,t-2,e,t)&&(i|=1),i<<=1,this.readModule(1,t-1,e,t)&&(i|=1),i}readCorner4(e,t){let i=0;return this.readModule(e-3,0,e,t)&&(i|=1),i<<=1,this.readModule(e-2,0,e,t)&&(i|=1),i<<=1,this.readModule(e-1,0,e,t)&&(i|=1),i<<=1,this.readModule(0,t-2,e,t)&&(i|=1),i<<=1,this.readModule(0,t-1,e,t)&&(i|=1),i<<=1,this.readModule(1,t-1,e,t)&&(i|=1),i<<=1,this.readModule(2,t-1,e,t)&&(i|=1),i<<=1,this.readModule(3,t-1,e,t)&&(i|=1),i}extractDataRegion(e){const t=this.version.getSymbolSizeRows(),i=this.version.getSymbolSizeColumns();if(e.getHeight()!==t)throw new IllegalArgumentException("Dimension of bitMatrix must match the version size");const r=this.version.getDataRegionSizeRows(),o=this.version.getDataRegionSizeColumns(),s=t/r|0,a=i/o|0,d=new BitMatrix(a*o,s*r);for(let t=0;t<s;++t){const i=t*r;for(let s=0;s<a;++s){const a=s*o;for(let h=0;h<r;++h){const n=t*(r+2)+1+h,l=i+h;for(let t=0;t<o;++t){const i=s*(o+2)+1+t;if(e.get(i,n)){const e=a+t;d.set(e,l)}}}}}return d}}
//# sourceMappingURL=/sm/9b863de785e1eacd594a35a12a19830cf5ee6d8e99d4c70b1b3b15ea966161d1.map