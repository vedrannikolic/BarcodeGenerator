/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/datamatrix/decoder/DecodedBitStreamParser.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import DecoderResult from"../../common/DecoderResult";import BitSource from"../../common/BitSource";import StringBuilder from"../../util/StringBuilder";import StringEncoding from"../../util/StringEncoding";import StringUtils from"../../common/StringUtils";import FormatException from"../../FormatException";import IllegalStateException from"../../IllegalStateException";var Mode;!function(e){e[e.PAD_ENCODE=0]="PAD_ENCODE",e[e.ASCII_ENCODE=1]="ASCII_ENCODE",e[e.C40_ENCODE=2]="C40_ENCODE",e[e.TEXT_ENCODE=3]="TEXT_ENCODE",e[e.ANSIX12_ENCODE=4]="ANSIX12_ENCODE",e[e.EDIFACT_ENCODE=5]="EDIFACT_ENCODE",e[e.BASE256_ENCODE=6]="BASE256_ENCODE"}(Mode||(Mode={}));export default class DecodedBitStreamParser{static decode(e){const t=new BitSource(e),r=new StringBuilder,a=new StringBuilder,o=new Array;let i=Mode.ASCII_ENCODE;do{if(i===Mode.ASCII_ENCODE)i=this.decodeAsciiSegment(t,r,a);else{switch(i){case Mode.C40_ENCODE:this.decodeC40Segment(t,r);break;case Mode.TEXT_ENCODE:this.decodeTextSegment(t,r);break;case Mode.ANSIX12_ENCODE:this.decodeAnsiX12Segment(t,r);break;case Mode.EDIFACT_ENCODE:this.decodeEdifactSegment(t,r);break;case Mode.BASE256_ENCODE:this.decodeBase256Segment(t,r,o);break;default:throw new FormatException}i=Mode.ASCII_ENCODE}}while(i!==Mode.PAD_ENCODE&&t.available()>0);return a.length()>0&&r.append(a.toString()),new DecoderResult(e,r.toString(),0===o.length?null:o,null)}static decodeAsciiSegment(e,t,r){let a=!1;do{let o=e.readBits(8);if(0===o)throw new FormatException;if(o<=128)return a&&(o+=128),t.append(String.fromCharCode(o-1)),Mode.ASCII_ENCODE;if(129===o)return Mode.PAD_ENCODE;if(o<=229){const e=o-130;e<10&&t.append("0"),t.append(""+e)}else switch(o){case 230:return Mode.C40_ENCODE;case 231:return Mode.BASE256_ENCODE;case 232:t.append(String.fromCharCode(29));break;case 233:case 234:case 241:break;case 235:a=!0;break;case 236:t.append("[)>05"),r.insert(0,"");break;case 237:t.append("[)>06"),r.insert(0,"");break;case 238:return Mode.ANSIX12_ENCODE;case 239:return Mode.TEXT_ENCODE;case 240:return Mode.EDIFACT_ENCODE;default:if(254!==o||0!==e.available())throw new FormatException}}while(e.available()>0);return Mode.ASCII_ENCODE}static decodeC40Segment(e,t){let r=!1;const a=[];let o=0;do{if(8===e.available())return;const i=e.readBits(8);if(254===i)return;this.parseTwoBytes(i,e.readBits(8),a);for(let e=0;e<3;e++){const i=a[e];switch(o){case 0:if(i<3)o=i+1;else{if(!(i<this.C40_BASIC_SET_CHARS.length))throw new FormatException;{const e=this.C40_BASIC_SET_CHARS[i];r?(t.append(String.fromCharCode(e.charCodeAt(0)+128)),r=!1):t.append(e)}}break;case 1:r?(t.append(String.fromCharCode(i+128)),r=!1):t.append(String.fromCharCode(i)),o=0;break;case 2:if(i<this.C40_SHIFT2_SET_CHARS.length){const e=this.C40_SHIFT2_SET_CHARS[i];r?(t.append(String.fromCharCode(e.charCodeAt(0)+128)),r=!1):t.append(e)}else switch(i){case 27:t.append(String.fromCharCode(29));break;case 30:r=!0;break;default:throw new FormatException}o=0;break;case 3:r?(t.append(String.fromCharCode(i+224)),r=!1):t.append(String.fromCharCode(i+96)),o=0;break;default:throw new FormatException}}}while(e.available()>0)}static decodeTextSegment(e,t){let r=!1,a=[],o=0;do{if(8===e.available())return;const i=e.readBits(8);if(254===i)return;this.parseTwoBytes(i,e.readBits(8),a);for(let e=0;e<3;e++){const i=a[e];switch(o){case 0:if(i<3)o=i+1;else{if(!(i<this.TEXT_BASIC_SET_CHARS.length))throw new FormatException;{const e=this.TEXT_BASIC_SET_CHARS[i];r?(t.append(String.fromCharCode(e.charCodeAt(0)+128)),r=!1):t.append(e)}}break;case 1:r?(t.append(String.fromCharCode(i+128)),r=!1):t.append(String.fromCharCode(i)),o=0;break;case 2:if(i<this.TEXT_SHIFT2_SET_CHARS.length){const e=this.TEXT_SHIFT2_SET_CHARS[i];r?(t.append(String.fromCharCode(e.charCodeAt(0)+128)),r=!1):t.append(e)}else switch(i){case 27:t.append(String.fromCharCode(29));break;case 30:r=!0;break;default:throw new FormatException}o=0;break;case 3:if(!(i<this.TEXT_SHIFT3_SET_CHARS.length))throw new FormatException;{const e=this.TEXT_SHIFT3_SET_CHARS[i];r?(t.append(String.fromCharCode(e.charCodeAt(0)+128)),r=!1):t.append(e),o=0}break;default:throw new FormatException}}}while(e.available()>0)}static decodeAnsiX12Segment(e,t){const r=[];do{if(8===e.available())return;const a=e.readBits(8);if(254===a)return;this.parseTwoBytes(a,e.readBits(8),r);for(let e=0;e<3;e++){const a=r[e];switch(a){case 0:t.append("\r");break;case 1:t.append("*");break;case 2:t.append(">");break;case 3:t.append(" ");break;default:if(a<14)t.append(String.fromCharCode(a+44));else{if(!(a<40))throw new FormatException;t.append(String.fromCharCode(a+51))}}}}while(e.available()>0)}static parseTwoBytes(e,t,r){let a=(e<<8)+t-1,o=Math.floor(a/1600);r[0]=o,a-=1600*o,o=Math.floor(a/40),r[1]=o,r[2]=a-40*o}static decodeEdifactSegment(e,t){do{if(e.available()<=16)return;for(let r=0;r<4;r++){let r=e.readBits(6);if(31===r){const t=8-e.getBitOffset();return void(8!==t&&e.readBits(t))}0==(32&r)&&(r|=64),t.append(String.fromCharCode(r))}}while(e.available()>0)}static decodeBase256Segment(e,t,r){let a=1+e.getByteOffset();const o=this.unrandomize255State(e.readBits(8),a++);let i;if(i=0===o?e.available()/8|0:o<250?o:250*(o-249)+this.unrandomize255State(e.readBits(8),a++),i<0)throw new FormatException;const n=new Uint8Array(i);for(let t=0;t<i;t++){if(e.available()<8)throw new FormatException;n[t]=this.unrandomize255State(e.readBits(8),a++)}r.push(n);try{t.append(StringEncoding.decode(n,StringUtils.ISO88591))}catch(e){throw new IllegalStateException("Platform does not support required encoding: "+e.message)}}static unrandomize255State(e,t){const r=e-(149*t%255+1);return r>=0?r:r+256}}DecodedBitStreamParser.C40_BASIC_SET_CHARS=["*","*","*"," ","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],DecodedBitStreamParser.C40_SHIFT2_SET_CHARS=["!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","[","\\","]","^","_"],DecodedBitStreamParser.TEXT_BASIC_SET_CHARS=["*","*","*"," ","0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],DecodedBitStreamParser.TEXT_SHIFT2_SET_CHARS=DecodedBitStreamParser.C40_SHIFT2_SET_CHARS,DecodedBitStreamParser.TEXT_SHIFT3_SET_CHARS=["`","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","{","|","}","~",String.fromCharCode(127)];
//# sourceMappingURL=/sm/b8bae209753068caa5cbb7f7bf0d2d606da6b4d774daca3d11e399b83e200482.map