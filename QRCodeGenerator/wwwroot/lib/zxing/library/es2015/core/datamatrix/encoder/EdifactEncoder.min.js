/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/core/datamatrix/encoder/EdifactEncoder.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import StringUtils from"../../common/StringUtils";import StringBuilder from"../../util/StringBuilder";import{EDIFACT_ENCODATION,ASCII_ENCODATION}from"./constants";import HighLevelEncoder from"./HighLevelEncoder";export class EdifactEncoder{getEncodingMode(){return EDIFACT_ENCODATION}encode(e){const t=new StringBuilder;for(;e.hasMoreCharacters();){const o=e.getCurrentChar();this.encodeChar(o,t),e.pos++;if(t.length()>=4){e.writeCodewords(this.encodeToCodewords(t.toString()));const o=t.toString().substring(4);t.setLengthToZero(),t.append(o);if(HighLevelEncoder.lookAheadTest(e.getMessage(),e.pos,this.getEncodingMode())!==this.getEncodingMode()){e.signalEncoderChange(ASCII_ENCODATION);break}}}t.append(StringUtils.getCharAt(31)),this.handleEOD(e,t)}handleEOD(e,t){try{const o=t.length();if(0===o)return;if(1===o){e.updateSymbolInfo();let t=e.getSymbolInfo().getDataCapacity()-e.getCodewordCount();const o=e.getRemainingCharacters();if(o>t&&(e.updateSymbolInfo(e.getCodewordCount()+1),t=e.getSymbolInfo().getDataCapacity()-e.getCodewordCount()),o<=t&&t<=2)return}if(o>4)throw new Error("Count must not exceed 4");const r=o-1,n=this.encodeToCodewords(t.toString());let d=!e.hasMoreCharacters()&&r<=2;if(r<=2){e.updateSymbolInfo(e.getCodewordCount()+r);e.getSymbolInfo().getDataCapacity()-e.getCodewordCount()>=3&&(d=!1,e.updateSymbolInfo(e.getCodewordCount()+n.length))}d?(e.resetSymbolInfo(),e.pos-=r):e.writeCodewords(n)}finally{e.signalEncoderChange(ASCII_ENCODATION)}}encodeChar(e,t){e>=" ".charCodeAt(0)&&e<="?".charCodeAt(0)?t.append(e):e>="@".charCodeAt(0)&&e<="^".charCodeAt(0)?t.append(StringUtils.getCharAt(e-64)):HighLevelEncoder.illegalCharacter(StringUtils.getCharAt(e))}encodeToCodewords(e){const t=e.length;if(0===t)throw new Error("StringBuilder must not be empty");const o=(e.charAt(0).charCodeAt(0)<<18)+((t>=2?e.charAt(1).charCodeAt(0):0)<<12)+((t>=3?e.charAt(2).charCodeAt(0):0)<<6)+(t>=4?e.charAt(3).charCodeAt(0):0),r=o>>16&255,n=o>>8&255,d=255&o,a=new StringBuilder;return a.append(r),t>=2&&a.append(n),t>=3&&a.append(d),a.toString()}}
//# sourceMappingURL=/sm/4d7a46a73dc69f477dd9419f177a7e6322d25530ae0608a7271a2e7fff2d7a12.map