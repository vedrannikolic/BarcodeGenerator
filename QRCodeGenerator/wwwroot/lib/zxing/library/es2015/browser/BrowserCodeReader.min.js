/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/es2015/browser/BrowserCodeReader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __awaiter=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(o,d){function r(e){try{a(n.next(e))}catch(e){d(e)}}function s(e){try{a(n.throw(e))}catch(e){d(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,s)}a((n=n.apply(e,t||[])).next())}))};import ArgumentException from"../core/ArgumentException";import BinaryBitmap from"../core/BinaryBitmap";import ChecksumException from"../core/ChecksumException";import HybridBinarizer from"../core/common/HybridBinarizer";import FormatException from"../core/FormatException";import NotFoundException from"../core/NotFoundException";import{HTMLCanvasElementLuminanceSource}from"./HTMLCanvasElementLuminanceSource";import{VideoInputDevice}from"./VideoInputDevice";export class BrowserCodeReader{constructor(e,t=500,i){this.reader=e,this.timeBetweenScansMillis=t,this._hints=i,this._stopContinuousDecode=!1,this._stopAsyncDecode=!1,this._timeBetweenDecodingAttempts=0}get hasNavigator(){return"undefined"!=typeof navigator}get isMediaDevicesSuported(){return this.hasNavigator&&!!navigator.mediaDevices}get canEnumerateDevices(){return!(!this.isMediaDevicesSuported||!navigator.mediaDevices.enumerateDevices)}get timeBetweenDecodingAttempts(){return this._timeBetweenDecodingAttempts}set timeBetweenDecodingAttempts(e){this._timeBetweenDecodingAttempts=e<0?0:e}set hints(e){this._hints=e||null}get hints(){return this._hints}listVideoInputDevices(){return __awaiter(this,void 0,void 0,(function*(){if(!this.hasNavigator)throw new Error("Can't enumerate devices, navigator is not present.");if(!this.canEnumerateDevices)throw new Error("Can't enumerate devices, method not supported.");const e=yield navigator.mediaDevices.enumerateDevices(),t=[];for(const i of e){const e="video"===i.kind?"videoinput":i.kind;if("videoinput"!==e)continue;const n={deviceId:i.deviceId||i.id,label:i.label||`Video device ${t.length+1}`,kind:e,groupId:i.groupId};t.push(n)}return t}))}getVideoInputDevices(){return __awaiter(this,void 0,void 0,(function*(){return(yield this.listVideoInputDevices()).map((e=>new VideoInputDevice(e.deviceId,e.label)))}))}findDeviceById(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.listVideoInputDevices();return t?t.find((t=>t.deviceId===e)):null}))}decodeFromInputVideoDevice(e,t){return __awaiter(this,void 0,void 0,(function*(){return yield this.decodeOnceFromVideoDevice(e,t)}))}decodeOnceFromVideoDevice(e,t){return __awaiter(this,void 0,void 0,(function*(){let i;this.reset(),i=e?{deviceId:{exact:e}}:{facingMode:"environment"};const n={video:i};return yield this.decodeOnceFromConstraints(n,t)}))}decodeOnceFromConstraints(e,t){return __awaiter(this,void 0,void 0,(function*(){const i=yield navigator.mediaDevices.getUserMedia(e);return yield this.decodeOnceFromStream(i,t)}))}decodeOnceFromStream(e,t){return __awaiter(this,void 0,void 0,(function*(){this.reset();const i=yield this.attachStreamToVideo(e,t);return yield this.decodeOnce(i)}))}decodeFromInputVideoDeviceContinuously(e,t,i){return __awaiter(this,void 0,void 0,(function*(){return yield this.decodeFromVideoDevice(e,t,i)}))}decodeFromVideoDevice(e,t,i){return __awaiter(this,void 0,void 0,(function*(){let n;n=e?{deviceId:{exact:e}}:{facingMode:"environment"};const o={video:n};return yield this.decodeFromConstraints(o,t,i)}))}decodeFromConstraints(e,t,i){return __awaiter(this,void 0,void 0,(function*(){const n=yield navigator.mediaDevices.getUserMedia(e);return yield this.decodeFromStream(n,t,i)}))}decodeFromStream(e,t,i){return __awaiter(this,void 0,void 0,(function*(){this.reset();const n=yield this.attachStreamToVideo(e,t);return yield this.decodeContinuously(n,i)}))}stopAsyncDecode(){this._stopAsyncDecode=!0}stopContinuousDecode(){this._stopContinuousDecode=!0}attachStreamToVideo(e,t){return __awaiter(this,void 0,void 0,(function*(){const i=this.prepareVideoElement(t);return this.addVideoSource(i,e),this.videoElement=i,this.stream=e,yield this.playVideoOnLoadAsync(i),i}))}playVideoOnLoadAsync(e){return new Promise(((t,i)=>this.playVideoOnLoad(e,(()=>t()))))}playVideoOnLoad(e,t){this.videoEndedListener=()=>this.stopStreams(),this.videoCanPlayListener=()=>this.tryPlayVideo(e),e.addEventListener("ended",this.videoEndedListener),e.addEventListener("canplay",this.videoCanPlayListener),e.addEventListener("playing",t),this.tryPlayVideo(e)}isVideoPlaying(e){return e.currentTime>0&&!e.paused&&!e.ended&&e.readyState>2}tryPlayVideo(e){return __awaiter(this,void 0,void 0,(function*(){if(this.isVideoPlaying(e))console.warn("Trying to play video that is already playing.");else try{yield e.play()}catch(e){console.warn("It was not possible to play the video.")}}))}getMediaElement(e,t){const i=document.getElementById(e);if(!i)throw new ArgumentException(`element with id '${e}' not found`);if(i.nodeName.toLowerCase()!==t.toLowerCase())throw new ArgumentException(`element with id '${e}' must be an ${t} element`);return i}decodeFromImage(e,t){if(!e&&!t)throw new ArgumentException("either imageElement with a src set or an url must be provided");return t&&!e?this.decodeFromImageUrl(t):this.decodeFromImageElement(e)}decodeFromVideo(e,t){if(!e&&!t)throw new ArgumentException("Either an element with a src set or an URL must be provided");return t&&!e?this.decodeFromVideoUrl(t):this.decodeFromVideoElement(e)}decodeFromVideoContinuously(e,t,i){if(void 0===e&&void 0===t)throw new ArgumentException("Either an element with a src set or an URL must be provided");return t&&!e?this.decodeFromVideoUrlContinuously(t,i):this.decodeFromVideoElementContinuously(e,i)}decodeFromImageElement(e){if(!e)throw new ArgumentException("An image element must be provided.");this.reset();const t=this.prepareImageElement(e);let i;return this.imageElement=t,i=this.isImageLoaded(t)?this.decodeOnce(t,!1,!0):this._decodeOnLoadImage(t),i}decodeFromVideoElement(e){const t=this._decodeFromVideoElementSetup(e);return this._decodeOnLoadVideo(t)}decodeFromVideoElementContinuously(e,t){const i=this._decodeFromVideoElementSetup(e);return this._decodeOnLoadVideoContinuously(i,t)}_decodeFromVideoElementSetup(e){if(!e)throw new ArgumentException("A video element must be provided.");this.reset();const t=this.prepareVideoElement(e);return this.videoElement=t,t}decodeFromImageUrl(e){if(!e)throw new ArgumentException("An URL must be provided.");this.reset();const t=this.prepareImageElement();this.imageElement=t;const i=this._decodeOnLoadImage(t);return t.src=e,i}decodeFromVideoUrl(e){if(!e)throw new ArgumentException("An URL must be provided.");this.reset();const t=this.prepareVideoElement(),i=this.decodeFromVideoElement(t);return t.src=e,i}decodeFromVideoUrlContinuously(e,t){if(!e)throw new ArgumentException("An URL must be provided.");this.reset();const i=this.prepareVideoElement(),n=this.decodeFromVideoElementContinuously(i,t);return i.src=e,n}_decodeOnLoadImage(e){return new Promise(((t,i)=>{this.imageLoadedListener=()=>this.decodeOnce(e,!1,!0).then(t,i),e.addEventListener("load",this.imageLoadedListener)}))}_decodeOnLoadVideo(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.playVideoOnLoadAsync(e),yield this.decodeOnce(e)}))}_decodeOnLoadVideoContinuously(e,t){return __awaiter(this,void 0,void 0,(function*(){yield this.playVideoOnLoadAsync(e),this.decodeContinuously(e,t)}))}isImageLoaded(e){return!!e.complete&&0!==e.naturalWidth}prepareImageElement(e){let t;return void 0===e&&(t=document.createElement("img"),t.width=200,t.height=200),"string"==typeof e&&(t=this.getMediaElement(e,"img")),e instanceof HTMLImageElement&&(t=e),t}prepareVideoElement(e){let t;return e||"undefined"==typeof document||(t=document.createElement("video"),t.width=200,t.height=200),"string"==typeof e&&(t=this.getMediaElement(e,"video")),e instanceof HTMLVideoElement&&(t=e),t.setAttribute("autoplay","true"),t.setAttribute("muted","true"),t.setAttribute("playsinline","true"),t}decodeOnce(e,t=!0,i=!0){this._stopAsyncDecode=!1;const n=(o,d)=>{if(this._stopAsyncDecode)return d(new NotFoundException("Video stream has ended before any code could be detected.")),void(this._stopAsyncDecode=void 0);try{o(this.decode(e))}catch(e){if(t&&e instanceof NotFoundException||(e instanceof ChecksumException||e instanceof FormatException)&&i)return setTimeout(n,this._timeBetweenDecodingAttempts,o,d);d(e)}};return new Promise(((e,t)=>n(e,t)))}decodeContinuously(e,t){this._stopContinuousDecode=!1;const i=()=>{if(this._stopContinuousDecode)this._stopContinuousDecode=void 0;else try{const n=this.decode(e);t(n,null),setTimeout(i,this.timeBetweenScansMillis)}catch(e){t(null,e);(e instanceof ChecksumException||e instanceof FormatException||e instanceof NotFoundException)&&setTimeout(i,this._timeBetweenDecodingAttempts)}};i()}decode(e){const t=this.createBinaryBitmap(e);return this.decodeBitmap(t)}createBinaryBitmap(e){this.getCaptureCanvasContext(e);e instanceof HTMLVideoElement?this.drawFrameOnCanvas(e):this.drawImageOnCanvas(e);const t=this.getCaptureCanvas(e),i=new HTMLCanvasElementLuminanceSource(t),n=new HybridBinarizer(i);return new BinaryBitmap(n)}getCaptureCanvasContext(e){if(!this.captureCanvasContext){const t=this.getCaptureCanvas(e);let i;try{i=t.getContext("2d",{willReadFrequently:!0})}catch(e){i=t.getContext("2d")}this.captureCanvasContext=i}return this.captureCanvasContext}getCaptureCanvas(e){if(!this.captureCanvas){const t=this.createCaptureCanvas(e);this.captureCanvas=t}return this.captureCanvas}drawFrameOnCanvas(e,t={sx:0,sy:0,sWidth:e.videoWidth,sHeight:e.videoHeight,dx:0,dy:0,dWidth:e.videoWidth,dHeight:e.videoHeight},i=this.captureCanvasContext){i.drawImage(e,t.sx,t.sy,t.sWidth,t.sHeight,t.dx,t.dy,t.dWidth,t.dHeight)}drawImageOnCanvas(e,t={sx:0,sy:0,sWidth:e.naturalWidth,sHeight:e.naturalHeight,dx:0,dy:0,dWidth:e.naturalWidth,dHeight:e.naturalHeight},i=this.captureCanvasContext){i.drawImage(e,t.sx,t.sy,t.sWidth,t.sHeight,t.dx,t.dy,t.dWidth,t.dHeight)}decodeBitmap(e){return this.reader.decode(e,this._hints)}createCaptureCanvas(e){if("undefined"==typeof document)return this._destroyCaptureCanvas(),null;const t=document.createElement("canvas");let i,n;return void 0!==e&&(e instanceof HTMLVideoElement?(i=e.videoWidth,n=e.videoHeight):e instanceof HTMLImageElement&&(i=e.naturalWidth||e.width,n=e.naturalHeight||e.height)),t.style.width=i+"px",t.style.height=n+"px",t.width=i,t.height=n,t}stopStreams(){this.stream&&(this.stream.getVideoTracks().forEach((e=>e.stop())),this.stream=void 0),!1===this._stopAsyncDecode&&this.stopAsyncDecode(),!1===this._stopContinuousDecode&&this.stopContinuousDecode()}reset(){this.stopStreams(),this._destroyVideoElement(),this._destroyImageElement(),this._destroyCaptureCanvas()}_destroyVideoElement(){this.videoElement&&(void 0!==this.videoEndedListener&&this.videoElement.removeEventListener("ended",this.videoEndedListener),void 0!==this.videoPlayingEventListener&&this.videoElement.removeEventListener("playing",this.videoPlayingEventListener),void 0!==this.videoCanPlayListener&&this.videoElement.removeEventListener("loadedmetadata",this.videoCanPlayListener),this.cleanVideoSource(this.videoElement),this.videoElement=void 0)}_destroyImageElement(){this.imageElement&&(void 0!==this.imageLoadedListener&&this.imageElement.removeEventListener("load",this.imageLoadedListener),this.imageElement.src=void 0,this.imageElement.removeAttribute("src"),this.imageElement=void 0)}_destroyCaptureCanvas(){this.captureCanvasContext=void 0,this.captureCanvas=void 0}addVideoSource(e,t){try{e.srcObject=t}catch(i){e.src=URL.createObjectURL(t)}}cleanVideoSource(e){try{e.srcObject=null}catch(t){e.src=""}this.videoElement.removeAttribute("src")}}
//# sourceMappingURL=/sm/54f14006c86d06bd3f1ff954ef3a80c578806611f4d7176acbe086ddcca59ad7.map