/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/cjs/core/qrcode/decoder/FormatInformation.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var __values=this&&this.__values||function(r){var t="function"==typeof Symbol&&Symbol.iterator,o=t&&r[t],n=0;if(o)return o.call(r);if(r&&"number"==typeof r.length)return{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(exports,"__esModule",{value:!0});var ErrorCorrectionLevel_1=require("./ErrorCorrectionLevel"),Integer_1=require("../../util/Integer"),FormatInformation=function(){function r(r){this.errorCorrectionLevel=ErrorCorrectionLevel_1.default.forBits(r>>3&3),this.dataMask=7&r}return r.numBitsDiffering=function(r,t){return Integer_1.default.bitCount(r^t)},r.decodeFormatInformation=function(t,o){var n=r.doDecodeFormatInformation(t,o);return null!==n?n:r.doDecodeFormatInformation(t^r.FORMAT_INFO_MASK_QR,o^r.FORMAT_INFO_MASK_QR)},r.doDecodeFormatInformation=function(t,o){var n,e,a=Number.MAX_SAFE_INTEGER,f=0;try{for(var i=__values(r.FORMAT_INFO_DECODE_LOOKUP),m=i.next();!m.done;m=i.next()){var u=m.value,y=u[0];if(y===t||y===o)return new r(u[1]);var I=r.numBitsDiffering(t,y);I<a&&(f=u[1],a=I),t!==o&&(I=r.numBitsDiffering(o,y))<a&&(f=u[1],a=I)}}catch(r){n={error:r}}finally{try{m&&!m.done&&(e=i.return)&&e.call(i)}finally{if(n)throw n.error}}return a<=3?new r(f):null},r.prototype.getErrorCorrectionLevel=function(){return this.errorCorrectionLevel},r.prototype.getDataMask=function(){return this.dataMask},r.prototype.hashCode=function(){return this.errorCorrectionLevel.getBits()<<3|this.dataMask},r.prototype.equals=function(t){if(!(t instanceof r))return!1;var o=t;return this.errorCorrectionLevel===o.errorCorrectionLevel&&this.dataMask===o.dataMask},r.FORMAT_INFO_MASK_QR=21522,r.FORMAT_INFO_DECODE_LOOKUP=[Int32Array.from([21522,0]),Int32Array.from([20773,1]),Int32Array.from([24188,2]),Int32Array.from([23371,3]),Int32Array.from([17913,4]),Int32Array.from([16590,5]),Int32Array.from([20375,6]),Int32Array.from([19104,7]),Int32Array.from([30660,8]),Int32Array.from([29427,9]),Int32Array.from([32170,10]),Int32Array.from([30877,11]),Int32Array.from([26159,12]),Int32Array.from([25368,13]),Int32Array.from([27713,14]),Int32Array.from([26998,15]),Int32Array.from([5769,16]),Int32Array.from([5054,17]),Int32Array.from([7399,18]),Int32Array.from([6608,19]),Int32Array.from([1890,20]),Int32Array.from([597,21]),Int32Array.from([3340,22]),Int32Array.from([2107,23]),Int32Array.from([13663,24]),Int32Array.from([12392,25]),Int32Array.from([16177,26]),Int32Array.from([14854,27]),Int32Array.from([9396,28]),Int32Array.from([8579,29]),Int32Array.from([11994,30]),Int32Array.from([11245,31])],r}();exports.default=FormatInformation;
//# sourceMappingURL=/sm/064cf954c0aaa3f6491313a1579d277c95085614de21c073447658f35b1b1156.map