/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/esm/core/pdf417/decoder/ec/ErrorCorrection.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __values=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],i=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};import ChecksumException from"../../../ChecksumException";import ModulusPoly from"./ModulusPoly";import ModulusGF from"./ModulusGF";var ErrorCorrection=function(){function e(){this.field=ModulusGF.PDF417_GF}return e.prototype.decode=function(e,t,r){for(var i,o,n=new ModulusPoly(this.field,e),l=new Int32Array(t),u=!1,s=t;s>0;s--){var f=n.evaluateAt(this.field.exp(s));l[t-s]=f,0!==f&&(u=!0)}if(!u)return 0;var a=this.field.getOne();if(null!=r)try{for(var h=__values(r),d=h.next();!d.done;d=h.next()){var c=d.value,g=this.field.exp(e.length-1-c),v=new ModulusPoly(this.field,new Int32Array([this.field.subtract(0,g),1]));a=a.multiply(v)}}catch(e){i={error:e}}finally{try{d&&!d.done&&(o=h.return)&&o.call(h)}finally{if(i)throw i.error}}var y=new ModulusPoly(this.field,l),m=this.runEuclideanAlgorithm(this.field.buildMonomial(t,1),y,t),p=m[0],w=m[1],C=this.findErrorLocations(p),E=this.findErrorMagnitudes(w,p,C);for(s=0;s<C.length;s++){var M=e.length-1-this.field.log(C[s]);if(M<0)throw ChecksumException.getChecksumInstance();e[M]=this.field.subtract(e[M],E[s])}return C.length},e.prototype.runEuclideanAlgorithm=function(e,t,r){if(e.getDegree()<t.getDegree()){var i=e;e=t,t=i}for(var o=e,n=t,l=this.field.getZero(),u=this.field.getOne();n.getDegree()>=Math.round(r/2);){var s=o,f=l;if(l=u,(o=n).isZero())throw ChecksumException.getChecksumInstance();n=s;for(var a=this.field.getZero(),h=o.getCoefficient(o.getDegree()),d=this.field.inverse(h);n.getDegree()>=o.getDegree()&&!n.isZero();){var c=n.getDegree()-o.getDegree(),g=this.field.multiply(n.getCoefficient(n.getDegree()),d);a=a.add(this.field.buildMonomial(c,g)),n=n.subtract(o.multiplyByMonomial(c,g))}u=a.multiply(l).subtract(f).negative()}var v=u.getCoefficient(0);if(0===v)throw ChecksumException.getChecksumInstance();var y=this.field.inverse(v);return[u.multiply(y),n.multiply(y)]},e.prototype.findErrorLocations=function(e){for(var t=e.getDegree(),r=new Int32Array(t),i=0,o=1;o<this.field.getSize()&&i<t;o++)0===e.evaluateAt(o)&&(r[i]=this.field.inverse(o),i++);if(i!==t)throw ChecksumException.getChecksumInstance();return r},e.prototype.findErrorMagnitudes=function(e,t,r){for(var i=t.getDegree(),o=new Int32Array(i),n=1;n<=i;n++)o[i-n]=this.field.multiply(n,t.getCoefficient(n));var l=new ModulusPoly(this.field,o),u=r.length,s=new Int32Array(u);for(n=0;n<u;n++){var f=this.field.inverse(r[n]),a=this.field.subtract(0,e.evaluateAt(f)),h=this.field.inverse(l.evaluateAt(f));s[n]=this.field.multiply(a,h)}return s},e}();export default ErrorCorrection;
//# sourceMappingURL=/sm/83420cef56425251b94371970fb7093f513c2702f07b0857af041fddcd63dfe4.map