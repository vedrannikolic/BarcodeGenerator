/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/esm/core/qrcode/encoder/MatrixUtil.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BitArray from"../../common/BitArray";import Integer from"../../util/Integer";import QRCode from"./QRCode";import MaskUtil from"./MaskUtil";import WriterException from"../../WriterException";import IllegalArgumentException from"../../IllegalArgumentException";var MatrixUtil=function(){function r(){}return r.clearMatrix=function(r){r.clear(255)},r.buildMatrix=function(t,e,n,o,a){r.clearMatrix(a),r.embedBasicPatterns(n,a),r.embedTypeInfo(e,o,a),r.maybeEmbedVersionInfo(n,a),r.embedDataBits(t,o,a)},r.embedBasicPatterns=function(t,e){r.embedPositionDetectionPatternsAndSeparators(e),r.embedDarkDotAtLeftBottomCorner(e),r.maybeEmbedPositionAdjustmentPatterns(t,e),r.embedTimingPatterns(e)},r.embedTypeInfo=function(t,e,n){var o=new BitArray;r.makeTypeInfoBits(t,e,o);for(var a=0,i=o.getSize();a<i;++a){var m=o.get(o.getSize()-1-a),f=r.TYPE_INFO_COORDINATES[a],I=f[0],A=f[1];if(n.setBoolean(I,A,m),a<8){var y=n.getWidth()-a-1,s=8;n.setBoolean(y,s,m)}else{y=8,s=n.getHeight()-7+(a-8);n.setBoolean(y,s,m)}}},r.maybeEmbedVersionInfo=function(t,e){if(!(t.getVersionNumber()<7)){var n=new BitArray;r.makeVersionInfoBits(t,n);for(var o=17,a=0;a<6;++a)for(var i=0;i<3;++i){var m=n.get(o);o--,e.setBoolean(a,e.getHeight()-11+i,m),e.setBoolean(e.getHeight()-11+i,a,m)}}},r.embedDataBits=function(t,e,n){for(var o=0,a=-1,i=n.getWidth()-1,m=n.getHeight()-1;i>0;){for(6===i&&(i-=1);m>=0&&m<n.getHeight();){for(var f=0;f<2;++f){var I=i-f;if(r.isEmpty(n.get(I,m))){var A=void 0;o<t.getSize()?(A=t.get(o),++o):A=!1,255!==e&&MaskUtil.getDataMaskBit(e,I,m)&&(A=!A),n.setBoolean(I,m,A)}}m+=a}m+=a=-a,i-=2}if(o!==t.getSize())throw new WriterException("Not all bits consumed: "+o+"/"+t.getSize())},r.findMSBSet=function(r){return 32-Integer.numberOfLeadingZeros(r)},r.calculateBCHCode=function(t,e){if(0===e)throw new IllegalArgumentException("0 polynomial");var n=r.findMSBSet(e);for(t<<=n-1;r.findMSBSet(t)>=n;)t^=e<<r.findMSBSet(t)-n;return t},r.makeTypeInfoBits=function(t,e,n){if(!QRCode.isValidMaskPattern(e))throw new WriterException("Invalid mask pattern");var o=t.getBits()<<3|e;n.appendBits(o,5);var a=r.calculateBCHCode(o,r.TYPE_INFO_POLY);n.appendBits(a,10);var i=new BitArray;if(i.appendBits(r.TYPE_INFO_MASK_PATTERN,15),n.xor(i),15!==n.getSize())throw new WriterException("should not happen but we got: "+n.getSize())},r.makeVersionInfoBits=function(t,e){e.appendBits(t.getVersionNumber(),6);var n=r.calculateBCHCode(t.getVersionNumber(),r.VERSION_INFO_POLY);if(e.appendBits(n,12),18!==e.getSize())throw new WriterException("should not happen but we got: "+e.getSize())},r.isEmpty=function(r){return 255===r},r.embedTimingPatterns=function(t){for(var e=8;e<t.getWidth()-8;++e){var n=(e+1)%2;r.isEmpty(t.get(e,6))&&t.setNumber(e,6,n),r.isEmpty(t.get(6,e))&&t.setNumber(6,e,n)}},r.embedDarkDotAtLeftBottomCorner=function(r){if(0===r.get(8,r.getHeight()-8))throw new WriterException;r.setNumber(8,r.getHeight()-8,1)},r.embedHorizontalSeparationPattern=function(t,e,n){for(var o=0;o<8;++o){if(!r.isEmpty(n.get(t+o,e)))throw new WriterException;n.setNumber(t+o,e,0)}},r.embedVerticalSeparationPattern=function(t,e,n){for(var o=0;o<7;++o){if(!r.isEmpty(n.get(t,e+o)))throw new WriterException;n.setNumber(t,e+o,0)}},r.embedPositionAdjustmentPattern=function(t,e,n){for(var o=0;o<5;++o)for(var a=r.POSITION_ADJUSTMENT_PATTERN[o],i=0;i<5;++i)n.setNumber(t+i,e+o,a[i])},r.embedPositionDetectionPattern=function(t,e,n){for(var o=0;o<7;++o)for(var a=r.POSITION_DETECTION_PATTERN[o],i=0;i<7;++i)n.setNumber(t+i,e+o,a[i])},r.embedPositionDetectionPatternsAndSeparators=function(t){var e=r.POSITION_DETECTION_PATTERN[0].length;r.embedPositionDetectionPattern(0,0,t),r.embedPositionDetectionPattern(t.getWidth()-e,0,t),r.embedPositionDetectionPattern(0,t.getWidth()-e,t);r.embedHorizontalSeparationPattern(0,7,t),r.embedHorizontalSeparationPattern(t.getWidth()-8,7,t),r.embedHorizontalSeparationPattern(0,t.getWidth()-8,t);r.embedVerticalSeparationPattern(7,0,t),r.embedVerticalSeparationPattern(t.getHeight()-7-1,0,t),r.embedVerticalSeparationPattern(7,t.getHeight()-7,t)},r.maybeEmbedPositionAdjustmentPatterns=function(t,e){if(!(t.getVersionNumber()<2))for(var n=t.getVersionNumber()-1,o=r.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[n],a=0,i=o.length;a!==i;a++){var m=o[a];if(m>=0)for(var f=0;f!==i;f++){var I=o[f];I>=0&&r.isEmpty(e.get(I,m))&&r.embedPositionAdjustmentPattern(I-2,m-2,e)}}},r.POSITION_DETECTION_PATTERN=Array.from([Int32Array.from([1,1,1,1,1,1,1]),Int32Array.from([1,0,0,0,0,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,0,0,0,0,1]),Int32Array.from([1,1,1,1,1,1,1])]),r.POSITION_ADJUSTMENT_PATTERN=Array.from([Int32Array.from([1,1,1,1,1]),Int32Array.from([1,0,0,0,1]),Int32Array.from([1,0,1,0,1]),Int32Array.from([1,0,0,0,1]),Int32Array.from([1,1,1,1,1])]),r.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE=Array.from([Int32Array.from([-1,-1,-1,-1,-1,-1,-1]),Int32Array.from([6,18,-1,-1,-1,-1,-1]),Int32Array.from([6,22,-1,-1,-1,-1,-1]),Int32Array.from([6,26,-1,-1,-1,-1,-1]),Int32Array.from([6,30,-1,-1,-1,-1,-1]),Int32Array.from([6,34,-1,-1,-1,-1,-1]),Int32Array.from([6,22,38,-1,-1,-1,-1]),Int32Array.from([6,24,42,-1,-1,-1,-1]),Int32Array.from([6,26,46,-1,-1,-1,-1]),Int32Array.from([6,28,50,-1,-1,-1,-1]),Int32Array.from([6,30,54,-1,-1,-1,-1]),Int32Array.from([6,32,58,-1,-1,-1,-1]),Int32Array.from([6,34,62,-1,-1,-1,-1]),Int32Array.from([6,26,46,66,-1,-1,-1]),Int32Array.from([6,26,48,70,-1,-1,-1]),Int32Array.from([6,26,50,74,-1,-1,-1]),Int32Array.from([6,30,54,78,-1,-1,-1]),Int32Array.from([6,30,56,82,-1,-1,-1]),Int32Array.from([6,30,58,86,-1,-1,-1]),Int32Array.from([6,34,62,90,-1,-1,-1]),Int32Array.from([6,28,50,72,94,-1,-1]),Int32Array.from([6,26,50,74,98,-1,-1]),Int32Array.from([6,30,54,78,102,-1,-1]),Int32Array.from([6,28,54,80,106,-1,-1]),Int32Array.from([6,32,58,84,110,-1,-1]),Int32Array.from([6,30,58,86,114,-1,-1]),Int32Array.from([6,34,62,90,118,-1,-1]),Int32Array.from([6,26,50,74,98,122,-1]),Int32Array.from([6,30,54,78,102,126,-1]),Int32Array.from([6,26,52,78,104,130,-1]),Int32Array.from([6,30,56,82,108,134,-1]),Int32Array.from([6,34,60,86,112,138,-1]),Int32Array.from([6,30,58,86,114,142,-1]),Int32Array.from([6,34,62,90,118,146,-1]),Int32Array.from([6,30,54,78,102,126,150]),Int32Array.from([6,24,50,76,102,128,154]),Int32Array.from([6,28,54,80,106,132,158]),Int32Array.from([6,32,58,84,110,136,162]),Int32Array.from([6,26,54,82,110,138,166]),Int32Array.from([6,30,58,86,114,142,170])]),r.TYPE_INFO_COORDINATES=Array.from([Int32Array.from([8,0]),Int32Array.from([8,1]),Int32Array.from([8,2]),Int32Array.from([8,3]),Int32Array.from([8,4]),Int32Array.from([8,5]),Int32Array.from([8,7]),Int32Array.from([8,8]),Int32Array.from([7,8]),Int32Array.from([5,8]),Int32Array.from([4,8]),Int32Array.from([3,8]),Int32Array.from([2,8]),Int32Array.from([1,8]),Int32Array.from([0,8])]),r.VERSION_INFO_POLY=7973,r.TYPE_INFO_POLY=1335,r.TYPE_INFO_MASK_PATTERN=21522,r}();export default MatrixUtil;
//# sourceMappingURL=/sm/978f645f0759963319e6166c44839cd4ce3fcbb82f5a1f8311c499a78cbc7bc0.map