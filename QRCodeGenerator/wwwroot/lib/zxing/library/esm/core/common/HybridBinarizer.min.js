/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/esm/core/common/HybridBinarizer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var r=function(t,a){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,t){r.__proto__=t}||function(r,t){for(var a in t)t.hasOwnProperty(a)&&(r[a]=t[a])},r(t,a)};return function(t,a){function o(){this.constructor=t}r(t,a),t.prototype=null===a?Object.create(a):(o.prototype=a.prototype,new o)}}();import GlobalHistogramBinarizer from"./GlobalHistogramBinarizer";import BitMatrix from"./BitMatrix";var HybridBinarizer=function(r){function t(t){var a=r.call(this,t)||this;return a.matrix=null,a}return __extends(t,r),t.prototype.getBlackMatrix=function(){if(null!==this.matrix)return this.matrix;var a=this.getLuminanceSource(),o=a.getWidth(),i=a.getHeight();if(o>=t.MINIMUM_DIMENSION&&i>=t.MINIMUM_DIMENSION){var e=a.getMatrix(),n=o>>t.BLOCK_SIZE_POWER;0!=(o&t.BLOCK_SIZE_MASK)&&n++;var _=i>>t.BLOCK_SIZE_POWER;0!=(i&t.BLOCK_SIZE_MASK)&&_++;var c=t.calculateBlackPoints(e,n,_,o,i),I=new BitMatrix(o,i);t.calculateThresholdForBlock(e,n,_,o,i,c,I),this.matrix=I}else this.matrix=r.prototype.getBlackMatrix.call(this);return this.matrix},t.prototype.createBinarizer=function(r){return new t(r)},t.calculateThresholdForBlock=function(r,a,o,i,e,n,_){for(var c=e-t.BLOCK_SIZE,I=i-t.BLOCK_SIZE,B=0;B<o;B++){var O=B<<t.BLOCK_SIZE_POWER;O>c&&(O=c);for(var E=t.cap(B,2,o-3),l=0;l<a;l++){var f=l<<t.BLOCK_SIZE_POWER;f>I&&(f=I);for(var u=t.cap(l,2,a-3),S=0,s=-2;s<=2;s++){var C=n[E+s];S+=C[u-2]+C[u-1]+C[u]+C[u+1]+C[u+2]}var K=S/25;t.thresholdBlock(r,f,O,K,i,_)}}},t.cap=function(r,t,a){return r<t?t:r>a?a:r},t.thresholdBlock=function(r,a,o,i,e,n){for(var _=0,c=o*e+a;_<t.BLOCK_SIZE;_++,c+=e)for(var I=0;I<t.BLOCK_SIZE;I++)(255&r[c+I])<=i&&n.set(a+I,o+_)},t.calculateBlackPoints=function(r,a,o,i,e){for(var n=e-t.BLOCK_SIZE,_=i-t.BLOCK_SIZE,c=new Array(o),I=0;I<o;I++){c[I]=new Int32Array(a);var B=I<<t.BLOCK_SIZE_POWER;B>n&&(B=n);for(var O=0;O<a;O++){var E=O<<t.BLOCK_SIZE_POWER;E>_&&(E=_);for(var l=0,f=255,u=0,S=0,s=B*i+E;S<t.BLOCK_SIZE;S++,s+=i){for(var C=0;C<t.BLOCK_SIZE;C++){var K=255&r[s+C];l+=K,K<f&&(f=K),K>u&&(u=K)}if(u-f>t.MIN_DYNAMIC_RANGE)for(S++,s+=i;S<t.BLOCK_SIZE;S++,s+=i)for(C=0;C<t.BLOCK_SIZE;C++)l+=255&r[s+C]}var v=l>>2*t.BLOCK_SIZE_POWER;if(u-f<=t.MIN_DYNAMIC_RANGE&&(v=f/2,I>0&&O>0)){var M=(c[I-1][O]+2*c[I][O-1]+c[I-1][O-1])/4;f<M&&(v=M)}c[I][O]=v}}return c},t.BLOCK_SIZE_POWER=3,t.BLOCK_SIZE=1<<t.BLOCK_SIZE_POWER,t.BLOCK_SIZE_MASK=t.BLOCK_SIZE-1,t.MINIMUM_DIMENSION=5*t.BLOCK_SIZE,t.MIN_DYNAMIC_RANGE=24,t}(GlobalHistogramBinarizer);export default HybridBinarizer;
//# sourceMappingURL=/sm/f33ea4928b5aba2e39aff197be544d1a5141555651f44a7718be89d4e32032e1.map