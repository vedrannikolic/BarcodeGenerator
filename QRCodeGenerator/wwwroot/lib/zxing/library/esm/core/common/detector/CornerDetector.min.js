/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@zxing/library@0.21.0/esm/core/common/detector/CornerDetector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ResultPoint from"../../ResultPoint";import NotFoundException from"../../NotFoundException";var CornerDetector=function(){function t(t,e,i,n,r){this.image=t,this.height=t.getHeight(),this.width=t.getWidth();var o=e/2;if(this.leftInit=i-o,this.rightInit=i+o,this.upInit=n-o,this.downInit=n+o,this.targetMatrixSize=2*r,this.upInit<0||this.leftInit<0||this.downInit>=this.height||this.rightInit>=this.width)throw new NotFoundException}return t.prototype.detect=function(){for(var t=this.leftInit,e=this.rightInit,i=this.upInit,n=this.downInit,r=!1,o=!0,g=!1,s=!1,h=!1,a=!1,u=!1;o;){o=!1;for(var f=!0;(f||!s)&&e<this.width;)(f=this.containsBlackPoint(i,n,e,!1))?(e++,o=!0,s=!0):s||e++;if(e>=this.width){r=!0;break}for(var w=!0;(w||!h)&&n<this.height;)(w=this.containsBlackPoint(t,e,n,!0))?(n++,o=!0,h=!0):h||n++;if(n>=this.height){r=!0;break}for(var l=!0;(l||!a)&&t>=0;)(l=this.containsBlackPoint(i,n,t,!1))?(t--,o=!0,a=!0):a||t--;if(t<0){r=!0;break}for(var c=!0;(c||!u)&&i>=0;)(c=this.containsBlackPoint(t,e,i,!0))?(i--,o=!0,u=!0):u||i--;if(i<0){r=!0;break}o&&(g=!0)}if(!r&&g)return this.findCorners(e,t,n,i);throw new NotFoundException},t.prototype.findCorners=function(t,e,i,n){var r=t-e,o=i-n,g=16/this.targetMatrixSize,s=4/this.targetMatrixSize,h=r*s,a=o*s,u=h+(t-e)*g,f=a+(i-n)*g,w=new ResultPoint(e-h,n-a),l=new ResultPoint(t+h,n-a),c=new ResultPoint(t+h,i+a),P=new ResultPoint(e-h,i+a),X=new ResultPoint(w.getX()+u,w.getY()+f),p=new ResultPoint(l.getX()-u,l.getY()+f),d=new ResultPoint(c.getX()-u,c.getY()-f),Y=new ResultPoint(P.getX()+u,P.getY()-f),m=this.getCornerFromArea(w.getX(),X.getX(),w.getY(),X.getY(),!1,!1),R=this.getCornerFromArea(p.getX(),l.getX(),l.getY(),p.getY(),!0,!1),v=this.getCornerFromArea(d.getX(),c.getX(),d.getY(),c.getY(),!0,!0),I=this.getCornerFromArea(P.getX(),Y.getX(),Y.getY(),P.getY(),!1,!0),x=(R.getX()-m.getX())/this.targetMatrixSize,F=(v.getY()-R.getY())/this.targetMatrixSize;return[new ResultPoint(m.getX()+x,m.getY()+F),new ResultPoint(R.getX()-x,R.getY()+F),new ResultPoint(v.getX()-x,v.getY()-F),new ResultPoint(I.getX()+x,I.getY()-F)]},t.prototype.getCornerFromArea=function(t,e,i,n,r,o){for(var g=r?0:Number.MAX_VALUE,s=o?0:Number.MAX_VALUE,h=t;h<e;h++)for(var a=i;a<n;a++)h>0&&a>0&&h<this.image.getWidth()&&a<this.image.getHeight()&&this.image.get(h,a)&&(r?h>g&&(g=h):h<g&&(g=h),o?a>s&&(s=a):a<s&&(s=a));if(0===g||0===s)throw new NotFoundException;return new ResultPoint(g,s)},t.prototype.containsBlackPoint=function(t,e,i,n){if(n){for(var r=t;r<=e;r++)if(this.image.get(r,i))return!0}else for(var o=t;o<=e;o++)if(this.image.get(i,o))return!0;return!1},t}();export default CornerDetector;
//# sourceMappingURL=/sm/72867aafa5529c700711d9e9f5bd12561f6990a1630732768d2b12d8d2cea4c4.map